{"version":3,"sources":["theme/typography.js","theme/index.js","theme/shadows.js","utilities/constants.js","modules/Profile.js","utilities/routes.js","utilities/token.js","providers/authProvider.js","utilities/httpClient.js","utilities/services.js","providers/adminDataProvider.js","providers/profileDataProvider.js","providers/teamMemberDataProvider.js","providers/userTokenDataProvider.js","providers/oauthProvider.js","providers/userMembershipDataProvider.js","providers/dataProviders.js","components/NotFound.js","components/Dashboard.js","components/GlobalStyles.js","components/Page.js","components/Login.js","layouts/LoginLayout/index.js","utilities/password.js","modules/User.js","modules/Team.js","layouts/MainLayout/Menu.js","layouts/MainLayout/AppBar.js","layouts/MainLayout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["fontFamily","join","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","theme","createMuiTheme","palette","background","default","light","dark","white","colors","common","black","primary","main","secondary","text","shadows","typography","base_url","contentTypeJSON","grantTypes","user_refresh_token","statusList","roleList","teamRoleList","teamAccessListChoices","id","name","teamAccessDefault","teamAccessList","userAccessList","userAccessDefault","userAccessListChoices","getScopeList","allAccessList","allAccessListChoices","ProfileEditToolbar","props","Toolbar","SaveButton","submitOnEnter","key","path","component","Edit","localStorage","getItem","resource","basePath","redirect","title","hasEdit","hasDelete","transform","data","newData","username","password","emailAddress","contactNumber","SimpleForm","toolbar","TextInput","fullWidth","source","validate","required","PasswordInput","TextField","label","FunctionField","render","record","constants","token","verify","meta","request","Request","method","fetch","then","response","status","Error","statusText","a","jwt","accessToken","scope","indexAdmin","indexOf","length","authProvider","login","params","body","JSON","stringify","headers","Headers","json","console","log","setItem","accessTokenExpiration","refreshToken","refreshTokenExpiration","Promise","resolve","logout","refresh_token","removeItem","checkAuth","reject","checkError","error","grant_type","getPermissions","url","options","append","Accept","Authorization","fetchUtils","fetchJson","Date","getTime","httpClient","apiUrl","getList","pagination","page","perPage","sort","query","field","order","limit","offset","q","filter","all","request_type","condition","total","get","parseInt","split","pop","getOne","getMany","getManyReference","update","updateMany","ids","create","delete","deleteMany","previousData","teamId","userId","user_id","expiration","revokeAll","tokenGrant","switchDefault","dataProviders","dataProvider","profileDataProvider","adminDataProvider","teamMemberDataProvider","userTokenDataProvider","oauthDataProvider","userMembershipDataProvider","type","dataProviderMapping","e","GET_LIST","GET_ONE","GET_MANY_REFERENCE","GET_MANY","UPDATE","UPDATE_MANY","CREATE","DELETE","DELETE_MANY","useStyles","makeStyles","image","width","height","marginRight","marginLeft","classes","Card","Title","CardMedia","className","media","Typography","variant","color","align","createStyles","boxSizing","margin","padding","html","backgroundColor","textDecoration","GlobalStyles","Page","forwardRef","ref","children","rest","Helmet","root","paddingBottom","spacing","paddingTop","inputTextColor","Login","useLogin","notify","useNotify","useRedirect","useState","setUsername","setPassword","Box","display","flexDirection","justifyContent","Container","maxWidth","mb","onSubmit","preventDefault","res","catch","err","onChange","target","value","InputProps","my","Button","size","Notification","autoHideDuration","overflow","wrapper","flex","contentContainer","content","LoginLayout","ThemeProvider","generatePassword","generator","generate","numbers","uppercase","lowercase","strict","revokeAllButton","float","revokeAllTopBar","UserFilter","Filter","SearchInput","alwaysOn","ListActions","maxResults","exporter","filters","useListContext","currentSort","filterValues","loading","setLoading","useDataProvider","open","setOpen","revoke","message","RevokeAllModal","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","autoFocus","TopToolbar","sanitizeListRestProps","CreateButton","ExportButton","disabled","startIcon","UserList","List","actions","bulkActionButtons","Datagrid","ShowButton","DeleteWithConfirmButton","UserEdit","passwordLength","setPasswordLength","GeneratePasswordButton","form","useForm","handleGenerate","useCallback","change","style","created","modified","deleted","team","team_id","copy","flexGrow","gutterBottom","Grid","container","alignItems","item","xs","sm","md","lg","xl","Slider","step","min","max","valueLabelDisplay","event","newValue","Input","evt","isNaN","onBlur","inputProps","SelectInput","choices","initialValue","format","SelectArrayInput","UserPost","refresh","useRefresh","Create","onSuccess","BooleanInput","UserShow","RevokeAllToken","useDeleteMany","onError","deleteToken","DeleteModal","useCreate","TokenCreateToolbar","MakeDefault","is_default","CustomDeleteButton","is_original","accesses","teamAccess","Show","TabbedShowLayout","Tab","access","map","Chip","ReferenceManyField","reference","addLabel","role","BooleanField","save","val","payload","NumberInput","TeamFilter","TeamList","TeamEdit","notify_email","isNotifyEmail","notify_wa","isNotifyWa","TeamPost","TeamShow","genericLoading","setGenericLoading","setToken","setExpiration","useUpdate","TeamMemberCreateToolbar","user","onFailure","emptyText","AppMenu","fetchProfile","crudGetOne","this","profile","UserMenu","MenuItemLink","to","primaryText","leftIcon","Component","AppUserMenu","connect","state","profileState","admin","resources","LayoutAppBar","AppBar","userMenu","AppLayout","Layout","appBar","App","Admin","loginPage","dashboard","Dashboard","customRoutes","routes","catchAll","NotFound","layout","Resource","icon","PeopleAltIcon","list","edit","show","GroupIcon","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4jBAAe,GACXA,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,KACPC,GAAI,CACFC,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBC,GAAI,CACFH,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBE,GAAI,CACFJ,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBG,GAAI,CACFL,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBI,GAAI,CACFN,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBK,GAAI,CACFP,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBM,SAAU,CACRR,WAAY,MChBHS,EAxBDC,YAAe,CACzBC,QAAS,CACLC,WAAY,CACRC,QAAS,UACTC,MAAO,UACPC,KAAM,UACNC,MAAOC,IAAOC,OAAOF,MACrBG,MAAOF,IAAOC,OAAOC,OAEzBC,QAAS,CACLC,KAAM,WAEVC,UAAW,CACPD,KAAM,WAEVE,KAAM,CACFH,QAAS,UACTE,UAAW,YAGnBE,QCxBW,CACX,OACA,iEACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,+DACA,+DACA,+DACA,+DACA,+DACA,+DACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,iEDAAC,e,yFEzBW,GAIXC,SAAU,kCACVC,gBAAiB,mBACjBC,WAAY,CACRC,mBAAoB,sBAExBC,WAAY,CAAC,WAAY,YAAa,UAAW,WACjDC,SAAU,CAAC,QAAS,WACpBC,aAAc,CAAC,QAAS,SAAU,SAClCC,sBAAuB,CACnB,CAAEC,GAAI,uBAAwBC,KAAM,gCACpC,CAAED,GAAI,uBAAwBC,KAAM,kCACpC,CAAED,GAAI,0BAA2BC,KAAM,2BACvC,CAAED,GAAI,4BAA6BC,KAAM,6BACzC,CAAED,GAAI,uBAAwBC,KAAM,8BACpC,CAAED,GAAI,yBAA0BC,KAAM,4BACtC,CAAED,GAAI,yBAA0BC,KAAM,+BACtC,CAAED,GAAI,yBAA0BC,KAAM,gCAE1CC,kBAAmB,CAAC,uBAAwB,0BAA2B,wBACvEC,eAAgB,CACZ,qBAAwB,+BACxB,qBAAwB,iCACxB,wBAA2B,0BAC3B,0BAA6B,4BAC7B,qBAAwB,6BACxB,uBAA0B,2BAC1B,uBAA0B,8BAC1B,uBAA0B,+BAE9BC,eAAgB,CACZ,SAAY,sCACZ,wBAA2B,wDAE3B,uBAA0B,kCAC1B,kBAAqB,6BACrB,gBAAmB,2BACnB,gBAAmB,2BACnB,gBAAmB,2BAEnB,eAAkB,0BAClB,iBAAoB,4BACpB,iBAAoB,4BACpB,iBAAoB,4BAEpB,aAAgB,8BAChB,eAAkB,gCAClB,eAAkB,gCAClB,eAAkB,gCAElB,WAAc,8BACd,aAAgB,gCAChB,aAAgB,gCAChB,aAAgB,gCAEhB,UAAa,qBACb,YAAe,qBACf,YAAe,uBAGf,cAAiB,0BACjB,YAAe,uBACf,qBAAwB,kCACxB,gBAAmB,4BACnB,YAAe,uBAEf,cAAiB,0BACjB,YAAe,uBACf,gBAAmB,2BACnB,YAAe,uBACf,gBAAmB,mCAEnB,mBAAsB,8BACtB,qBAAwB,gCACxB,iBAAoB,4BACpB,eAAkB,8BAElB,gBAAmB,iCACnB,kBAAqB,2CACrB,kBAAqB,2CACrB,kBAAqB,2CAErB,eAAkB,2BAClB,aAAgB,wBAChB,sBAAyB,kCACzB,iBAAoB,6BACpB,YAAe,uBACf,QAAW,+CACX,kBAAqB,iCAEzBC,kBAAmB,CACf,WACA,0BACA,yBACA,oBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,eACA,iBACA,iBACA,iBACA,aACA,eACA,eACA,eACA,YACA,cACA,cACA,uBACA,iBACA,wBACA,eAEJC,sBAAuB,CACnB,CAAEN,GAAI,WAAYC,KAAM,uCACxB,CAAED,GAAI,0BAA2BC,KAAM,yDACvC,CAAED,GAAI,yBAA0BC,KAAM,mCACtC,CAAED,GAAI,oBAAqBC,KAAM,8BACjC,CAAED,GAAI,kBAAmBC,KAAM,4BAC/B,CAAED,GAAI,kBAAmBC,KAAM,4BAC/B,CAAED,GAAI,kBAAmBC,KAAM,4BAC/B,CAAED,GAAI,iBAAkBC,KAAM,2BAC9B,CAAED,GAAI,mBAAoBC,KAAM,6BAChC,CAAED,GAAI,mBAAoBC,KAAM,6BAChC,CAAED,GAAI,mBAAoBC,KAAM,6BAChC,CAAED,GAAI,eAAgBC,KAAM,+BAC5B,CAAED,GAAI,iBAAkBC,KAAM,iCAC9B,CAAED,GAAI,iBAAkBC,KAAM,iCAC9B,CAAED,GAAI,iBAAkBC,KAAM,iCAC9B,CAAED,GAAI,aAAcC,KAAM,+BAC1B,CAAED,GAAI,eAAgBC,KAAM,iCAC5B,CAAED,GAAI,eAAgBC,KAAM,iCAC5B,CAAED,GAAI,eAAgBC,KAAM,iCAC5B,CAAED,GAAI,YAAaC,KAAM,sBACzB,CAAED,GAAI,cAAeC,KAAM,sBAC3B,CAAED,GAAI,cAAeC,KAAM,wBAC3B,CAAED,GAAI,gBAAiBC,KAAM,2BAC7B,CAAED,GAAI,cAAeC,KAAM,wBAC3B,CAAED,GAAI,uBAAwBC,KAAM,mCACpC,CAAED,GAAI,kBAAmBC,KAAM,6BAC/B,CAAED,GAAI,cAAeC,KAAM,wBAC3B,CAAED,GAAI,gBAAiBC,KAAM,2BAC7B,CAAED,GAAI,cAAeC,KAAM,wBAC3B,CAAED,GAAI,kBAAmBC,KAAM,4BAC/B,CAAED,GAAI,cAAeC,KAAM,wBAC3B,CAAED,GAAI,kBAAmBC,KAAM,oCAC/B,CAAED,GAAI,qBAAsBC,KAAM,+BAClC,CAAED,GAAI,uBAAwBC,KAAM,iCACpC,CAAED,GAAI,mBAAoBC,KAAM,6BAChC,CAAED,GAAI,iBAAkBC,KAAM,+BAC9B,CAAED,GAAI,kBAAmBC,KAAM,kCAC/B,CAAED,GAAI,oBAAqBC,KAAM,4CACjC,CAAED,GAAI,oBAAqBC,KAAM,4CACjC,CAAED,GAAI,oBAAqBC,KAAM,4CACjC,CAAED,GAAI,iBAAkBC,KAAM,4BAC9B,CAAED,GAAI,eAAgBC,KAAM,yBAC5B,CAAED,GAAI,wBAAyBC,KAAM,mCACrC,CAAED,GAAI,mBAAoBC,KAAM,8BAChC,CAAED,GAAI,cAAeC,KAAM,wBAC3B,CAAED,GAAI,UAAWC,KAAM,gDACvB,CAAED,GAAI,oBAAqBC,KAAM,kCAErCM,aAAc,CACV,WACA,0BAEA,yBACA,oBACA,kBACA,kBACA,kBAEA,iBACA,mBACA,mBACA,mBAEA,eACA,iBACA,iBACA,iBAEA,aACA,eACA,eACA,eAEA,YACA,cACA,cAGA,gBACA,cACA,uBACA,kBACA,cAEA,gBACA,cACA,uBACA,kBACA,cACA,uBACA,kBAEA,0BACA,qBACA,4BACA,uBACA,mBACA,iBAEA,uBACA,kBACA,yBACA,oBACA,yBACA,oBACA,yBACA,oBAEA,iBACA,eACA,wBACA,mBACA,cACA,UACA,qBAEJC,cAAe,CACX,SAAY,sCACZ,wBAA2B,wDAE3B,uBAA0B,kCAC1B,kBAAqB,6BACrB,gBAAmB,2BACnB,gBAAmB,2BACnB,gBAAmB,2BAEnB,eAAkB,0BAClB,iBAAoB,4BACpB,iBAAoB,4BACpB,iBAAoB,4BAEpB,aAAgB,8BAChB,eAAkB,gCAClB,eAAkB,gCAClB,eAAkB,gCAElB,WAAc,8BACd,aAAgB,gCAChB,aAAgB,gCAChB,aAAgB,gCAEhB,UAAa,qBACb,YAAe,qBACf,YAAe,uBAGf,cAAiB,0BACjB,YAAe,uBACf,qBAAwB,kCACxB,gBAAmB,4BACnB,YAAe,uBAEf,cAAiB,0BACjB,YAAe,uBACf,gBAAmB,2BACnB,YAAe,uBACf,gBAAmB,mCAEnB,mBAAsB,8BACtB,qBAAwB,gCACxB,iBAAoB,4BACpB,eAAkB,8BAElB,gBAAmB,iCACnB,kBAAqB,2CACrB,kBAAqB,2CACrB,kBAAqB,2CAErB,eAAkB,2BAClB,aAAgB,wBAChB,sBAAyB,kCACzB,iBAAoB,6BACpB,YAAe,uBACf,QAAW,+CACX,kBAAqB,gCACrB,qBAAwB,+BACxB,qBAAwB,iCACxB,wBAA2B,0BAC3B,0BAA6B,4BAC7B,qBAAwB,6BACxB,uBAA0B,2BAC1B,uBAA0B,8BAC1B,uBAA0B,+BAE9BC,qBAAsB,CAClB,CAAET,GAAI,WAAYC,KAAM,uCACxB,CAAED,GAAI,0BAA2BC,KAAM,yDACvC,CAAED,GAAI,yBAA0BC,KAAM,mCACtC,CAAED,GAAI,oBAAqBC,KAAM,8BACjC,CAAED,GAAI,kBAAmBC,KAAM,4BAC/B,CAAED,GAAI,kBAAmBC,KAAM,4BAC/B,CAAED,GAAI,kBAAmBC,KAAM,4BAC/B,CAAED,GAAI,iBAAkBC,KAAM,2BAC9B,CAAED,GAAI,mBAAoBC,KAAM,6BAChC,CAAED,GAAI,mBAAoBC,KAAM,6BAChC,CAAED,GAAI,mBAAoBC,KAAM,6BAChC,CAAED,GAAI,eAAgBC,KAAM,+BAC5B,CAAED,GAAI,iBAAkBC,KAAM,iCAC9B,CAAED,GAAI,iBAAkBC,KAAM,iCAC9B,CAAED,GAAI,iBAAkBC,KAAM,iCAC9B,CAAED,GAAI,aAAcC,KAAM,+BAC1B,CAAED,GAAI,eAAgBC,KAAM,iCAC5B,CAAED,GAAI,eAAgBC,KAAM,iCAC5B,CAAED,GAAI,eAAgBC,KAAM,iCAC5B,CAAED,GAAI,YAAaC,KAAM,sBACzB,CAAED,GAAI,cAAeC,KAAM,sBAC3B,CAAED,GAAI,cAAeC,KAAM,wBAC3B,CAAED,GAAI,gBAAiBC,KAAM,2BAC7B,CAAED,GAAI,cAAeC,KAAM,wBAC3B,CAAED,GAAI,uBAAwBC,KAAM,mCACpC,CAAED,GAAI,kBAAmBC,KAAM,6BAC/B,CAAED,GAAI,cAAeC,KAAM,wBAC3B,CAAED,GAAI,gBAAiBC,KAAM,2BAC7B,CAAED,GAAI,cAAeC,KAAM,wBAC3B,CAAED,GAAI,kBAAmBC,KAAM,4BAC/B,CAAED,GAAI,cAAeC,KAAM,wBAC3B,CAAED,GAAI,kBAAmBC,KAAM,oCAC/B,CAAED,GAAI,qBAAsBC,KAAM,+BAClC,CAAED,GAAI,uBAAwBC,KAAM,iCACpC,CAAED,GAAI,mBAAoBC,KAAM,6BAChC,CAAED,GAAI,iBAAkBC,KAAM,+BAC9B,CAAED,GAAI,kBAAmBC,KAAM,kCAC/B,CAAED,GAAI,oBAAqBC,KAAM,4CACjC,CAAED,GAAI,oBAAqBC,KAAM,4CACjC,CAAED,GAAI,oBAAqBC,KAAM,4CACjC,CAAED,GAAI,iBAAkBC,KAAM,4BAC9B,CAAED,GAAI,eAAgBC,KAAM,yBAC5B,CAAED,GAAI,wBAAyBC,KAAM,mCACrC,CAAED,GAAI,mBAAoBC,KAAM,8BAChC,CAAED,GAAI,cAAeC,KAAM,wBAC3B,CAAED,GAAI,UAAWC,KAAM,gDACvB,CAAED,GAAI,oBAAqBC,KAAM,iCACjC,CAAED,GAAI,uBAAwBC,KAAM,gCACpC,CAAED,GAAI,uBAAwBC,KAAM,kCACpC,CAAED,GAAI,0BAA2BC,KAAM,2BACvC,CAAED,GAAI,4BAA6BC,KAAM,6BACzC,CAAED,GAAI,uBAAwBC,KAAM,8BACpC,CAAED,GAAI,yBAA0BC,KAAM,4BACtC,CAAED,GAAI,yBAA0BC,KAAM,+BACtC,CAAED,GAAI,yBAA0BC,KAAM,iCC3VxCS,EAAqB,SAAAC,GAAK,OAC5B,kBAACC,EAAA,EAAYD,EACT,kBAACE,EAAA,EAAD,CACIC,eAAe,MCbZ,GACX,kBAAC,IAAD,CACIC,IAAI,UACJC,KAAK,WACLC,UDcmB,SAAAN,GAavB,OACI,kBAACO,EAAA,EAAD,eACIlB,GAAImB,aAAaC,QAAQ,MACzBC,SAAS,UACTC,SAAS,WACTC,UAAU,EACVC,MAAM,UACNC,SAAS,EACTC,WAAW,GACPf,EARR,CASIgB,UAtBU,SAAAC,GACd,IAAIC,EAAU,GAQd,OAPAA,EAAQC,SAAWF,EAAKE,SACpBF,EAAKG,WACLF,EAAQE,SAAWH,EAAKG,UAE5BF,EAAQG,aAAeJ,EAAKI,aAC5BH,EAAQI,cAAgBL,EAAKK,cAEtBJ,KAeH,kBAACK,EAAA,EAAD,CAAYC,QAAS,kBAAC,EAAD,OACjB,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,OAAO,WAAWC,SAAUC,gBACjD,kBAACC,EAAA,EAAD,CAAeJ,WAAS,EAACC,OAAO,aAChC,kBAACF,EAAA,EAAD,CAAWC,WAAS,EAACC,OAAO,iBAC5B,kBAACF,EAAA,EAAD,CAAWC,WAAS,EAACC,OAAO,kBAC5B,kBAACI,EAAA,EAAD,CAAWJ,OAAO,UAAUK,MAAM,YAClC,kBAACD,EAAA,EAAD,CAAWJ,OAAO,WAAWK,MAAM,aACnC,kBAACC,EAAA,EAAD,CAAeD,MAAM,SAASE,OAAQ,SAAAC,GAAM,OAAIA,EAASC,EAAUnD,WAAWkD,EAAM,QAAc,e,6CErBnGE,EA9BD,CACVC,OAAQ,SAAAC,GAEJ,IAAMC,EAAU,IAAIC,QAAJ,UAAeL,EAAUvD,SAAzB,sBAAuD,CACnE6D,OAAQ,QAGZ,OAAOC,MAAMH,GACZI,MAAM,SAAAC,GACH,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAC5C,MAAM,IAAIC,MAAMF,EAASG,YAE7B,OAAOH,KAEVD,KAPM,uCAOA,WAAOC,GAAP,mBAAAI,EAAA,kEACgBC,IADhB,KAC2BX,EAAKY,YADhC,SACmDN,EAASnE,OAD5D,wCACoB4D,OADpB,+BACGrB,EADH,OAGGmC,EAAQnC,EAAKmC,MAEbC,EAAajB,EAAUxC,aAAa0D,QAAQ,uBAE9CF,EAAMG,OAASF,GAAoC,MAAtBD,EAAMC,IAPpC,0CAQQpC,GARR,kCAWI,GAXJ,4CAPA,yDCyGAuC,EAhHM,CACjBC,MAAO,SAACC,GAEJ,IAAMlB,EAAU,IAAIC,QAAJ,UAAeL,EAAUvD,SAAzB,gBAAiD,CAC7D6D,OAAQ,OACRiB,KAAMC,KAAKC,UAAUH,GACrBI,QAAS,IAAIC,QAAQ,CACjB,eAAgB3B,EAAUtD,oBAIlC,OAAO6D,MAAMH,GACZI,MAAM,SAAAC,GACH,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAC5C,MAAM,IAAIC,MAAMF,EAASG,YAE7B,OAAOH,EAASmB,UAEnBpB,KAPM,uCAOA,WAAOL,GAAP,SAAAU,EAAA,6DACHgB,QAAQC,IAAI3B,GADT,SAEgBF,EAAMC,OAAOC,GAF7B,uCAIO,IAAIQ,MAAM,iDAJjB,cAOHvC,aAAa2D,QAAQ,cAAe5B,EAAKY,aACzC3C,aAAa2D,QAAQ,wBAAyB5B,EAAK6B,uBACnD5D,aAAa2D,QAAQ,eAAgB5B,EAAK8B,cAC1C7D,aAAa2D,QAAQ,yBAA0B5B,EAAK+B,wBAVjD,kBAYIC,QAAQC,WAZZ,4CAPA,wDAsBXC,OAAQ,SAACf,GAGL,GAAGlD,aAAa6D,aAAc,CAC1B,IAAM7B,EAAU,IAAIC,QAAJ,UAAeL,EAAUvD,SAAzB,iBAAkD,CAC9D6D,OAAQ,OACRiB,KAAMC,KAAKC,UAAU,CAACa,cAAelE,aAAa6D,eAClDP,QAAS,IAAIC,QAAQ,CACjB,eAAgB3B,EAAUtD,oBAIlC6D,MAAMH,GACLI,MAAM,SAAAC,GACH,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAC5C,MAAM,IAAIC,MAAMF,EAASG,YAE7B,OAAOH,EAASmB,UAEnBpB,KAPD,uCAOO,WAAOL,GAAP,SAAAU,EAAA,+EACIsB,QAAQC,WADZ,2CAPP,uDAiBJ,OANAhE,aAAamE,WAAW,MACxBnE,aAAamE,WAAW,QACxBnE,aAAamE,WAAW,eACxBnE,aAAamE,WAAW,yBACxBnE,aAAamE,WAAW,gBACxBnE,aAAamE,WAAW,0BACjBJ,QAAQC,WAEnBI,UAAW,SAAClB,GACR,OAAOlD,aAAaC,QAAQ,eAAiB8D,QAAQC,UAAYD,QAAQM,UAE7EC,WAAY,SAACC,GAET,GAAqB,MAAjBA,EAAMjC,OAAgB,CACtB,GAAKtC,aAAaC,QAAQ,gBAEnB,CAEH,IAAM+B,EAAU,IAAIC,QAAJ,UAAeL,EAAUvD,SAAzB,gBAAiD,CAC7D6D,OAAQ,OACRiB,KAAMC,KAAKC,UAAU,CACjBa,cAAelE,aAAa6D,aAC5BW,WAAY5C,EAAUrD,WAAWC,qBAErC8E,QAAS,IAAIC,QAAQ,CACjB,eAAgB3B,EAAUtD,oBAIlC,OAAO6D,MAAMH,GACZI,MAAM,SAAAC,GACH,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAC5C,MAAM,IAAIC,MAAMF,EAASG,YAE7B,OAAOH,EAASmB,UAEnBpB,MAAM,SAACL,GAMJ,OALA/B,aAAa2D,QAAQ,cAAe5B,EAAKY,aACzC3C,aAAa2D,QAAQ,wBAAyB5B,EAAK6B,uBACnD5D,aAAa2D,QAAQ,eAAgB5B,EAAK8B,cAC1C7D,aAAa2D,QAAQ,yBAA0B5B,EAAK+B,wBAE7CC,QAAQC,aA3BnB,OAAOD,QAAQM,SAkCvB,OAAON,QAAQC,WAEnBS,eAAgB,SAACvB,GACb,OAAOa,QAAQC,Y,kBC5GR,WAACU,GAAuB,IAAlBC,EAAiB,uDAAP,GAQ3B,OAPKA,EAAQrB,SAGTqB,EAAQrB,QAAQsB,OAAO,SAAUhD,EAAUtD,iBAC3CqG,EAAQrB,QAAQsB,OAAO,gBAAvB,iBAAkD5E,aAAa2C,eAH/DgC,EAAQrB,QAAU,IAAIC,QAAQ,CAAEsB,OAAQjD,EAAUtD,gBAAiBwG,cAAc,UAAD,OAAY9E,aAAa2C,eAMtGoC,IAAWC,UAAUN,EAAKC,ICRxBP,EAAY,WAErB,GAAIpE,aAAa4D,uBAAwB,IAAIqB,MAAOC,UAAY,KAIxDlF,aAAa8D,wBAAyB,IAAImB,MAAOC,UAAY,IAE7D,OAAOC,EAAW,GAAD,OAAIvD,EAAUvD,SAAd,gBAAsC,CACnD6D,OAAQ,OACRiB,KAAMC,KAAKC,UAAU,CACjBa,cAAelE,aAAa6D,aAC5BW,WAAY5C,EAAUrD,WAAWC,uBAGxC4D,MACG,YAAiB,IAAboB,EAAY,EAAZA,KACAC,QAAQC,IAAIF,GACZxD,aAAa2D,QAAQ,cAAeH,EAAKb,aACzC3C,aAAa2D,QAAQ,wBAAyBH,EAAKI,uBACnD5D,aAAa2D,QAAQ,eAAgBH,EAAKK,cAC1C7D,aAAa2D,QAAQ,yBAA0BH,EAAKM,4BCnBlEsB,EAAM,UAAMxD,EAAUvD,UAEb,GACXgH,QAAS,SAACnF,EAAUgD,GAChBkB,IAD2B,MAEDlB,EAAOoC,WAAzBC,EAFmB,EAEnBA,KAAMC,EAFa,EAEbA,QAFa,EAGFtC,EAAOuC,KAC1BC,GAJqB,EAGnBC,MAHmB,EAGZC,MACD,CACVC,MAAON,EAAOC,EACdM,OAASP,EAAOC,EAAWA,EAC3BO,EAAG7C,EAAO8C,OAAOD,EACjBlH,GAAIqE,EAAO8C,OAAOnH,GAElBoH,KAAK,EAELC,aAAc,QACdC,UAAW,OAETzB,EAAG,UAAMU,EAAN,YAAgBlF,EAAhB,YAA4BmD,oBAAUqC,IAC/C,OAAOP,EAAWT,GACjBtC,MACG,YACC,IADGkB,EACJ,EADIA,QAEA,MAAO,CACH7C,KAFR,EADa+C,KAGMzB,KACXqE,MAAQ9C,EAAQ+C,IAAI,iBAA6BC,SAAShD,EAAQ+C,IAAI,iBAAiBE,MAAM,KAAKC,MAAO,IAAlEhB,OAMvDiB,OAAQ,SAACvG,EAAUgD,GAEf,OADAkB,IACOe,EAAW,GAAD,OAAIC,EAAJ,YAAclF,EAAd,eAA6BgD,EAAOrE,KAAMuD,MAAK,kBAAe,CAC3E3B,KAD4D,EAAG+C,KACpDzB,KACXqE,MAAO,OAGfM,QAAS,SAACxG,EAAUgD,GAChBkB,IACA,IAAMM,EAAG,UAAMU,EAAN,YAAgBlF,GACzB,OAAOiF,EAAWT,GAAKtC,MAAK,kBAAe,CAAE3B,KAAjB,EAAG+C,KAAyBzB,UAG5D4E,iBAAkB,SAACzG,EAAUgD,GACzBkB,IADoC,MAEVlB,EAAOoC,WAAzBC,EAF4B,EAE5BA,KAAMC,EAFsB,EAEtBA,QAFsB,EAGXtC,EAAOuC,KAC1BC,GAJ8B,EAG5BC,MAH4B,EAGrBC,MACD,CACVC,MAAON,EAAOC,EACdM,OAAWP,EAAOC,EAAWA,EAAY,IAEvCd,EAAG,UAAMU,EAAN,YAAgBlF,EAAhB,YAA4BmD,oBAAUqC,IAE/C,OAAOP,EAAWT,GAAKtC,MAAK,gBAAGkB,EAAH,EAAGA,QAAH,MAAwB,CAChD7C,KADwB,EAAY+C,KACzBzB,KACXqE,MAAQ9C,EAAQ+C,IAAI,iBAA6BC,SAAShD,EAAQ+C,IAAI,iBAAiBE,MAAM,KAAKC,MAAO,IAAlEhB,OAG/CoB,OAAQ,SAAC1G,EAAUgD,GAEf,OADAkB,IACOe,EAAW,GAAD,OAAIC,EAAJ,YAAclF,GAAY,CACvCgC,OAAQ,QACRiB,KAAMC,KAAKC,UAAUH,EAAOzC,QAC7B2B,MAAK,kBAAe,CAAE3B,KAAjB,EAAG+C,UAEfqD,WAAY,SAAC3G,EAAUgD,GACnBkB,IACA,IAAMsB,EAAQ,CACVM,OAAQ5C,KAAKC,UAAU,CAAExE,GAAIqE,EAAO4D,OAExC,OAAO3B,EAAW,GAAD,OAAIC,EAAJ,YAAclF,EAAd,YAA0BmD,oBAAUqC,IAAU,CAC3DxD,OAAQ,QACRiB,KAAMC,KAAKC,UAAUH,EAAOzC,QAC7B2B,MAAK,kBAAe,CAAE3B,KAAjB,EAAG+C,UAGfuD,OAAQ,SAAC7G,EAAUgD,GAEf,OADAkB,IACOe,EAAW,GAAD,OAAIC,EAAJ,YAAclF,GAAY,CACvCgC,OAAQ,OACRiB,KAAMC,KAAKC,UAAUH,EAAOzC,QAC7B2B,MAAK,kBAAe,CACnB3B,KADI,EAAG+C,KACIzB,UAGnBiF,OAAQ,SAAC9G,EAAUgD,GAEf,OADAkB,IACOe,EAAW,GAAD,OAAIC,EAAJ,YAAclF,EAAd,eAA6BgD,EAAOrE,IAAM,CACvDqD,OAAQ,WACTE,MAAK,kBAAe,CAAE3B,KAAjB,EAAG+C,UAEfyD,WAAY,SAAC/G,EAAUgD,GACnBkB,IACA,IAAMsB,EAAQ,CACVM,OAAQ5C,KAAKC,UAAU,CAAExE,GAAIqE,EAAO4D,OAExC,OAAO3B,EAAW,GAAD,OAAIC,EAAJ,YAAclF,EAAd,YAA0BmD,oBAAUqC,IAAU,CAC3DxD,OAAQ,SACRiB,KAAMC,KAAKC,UAAUH,EAAOzC,QAC7B2B,MAAK,kBAAe,CAAE3B,KAAjB,EAAG+C,WCrGb4B,EAAM,UAAMxD,EAAUvD,SAAhB,UAEG,GACXoI,OAAQ,SAACvG,EAAUgD,GAEf,OADAkB,IACOe,EAAW,GAAD,OAAIC,IACpBhD,MACG,YAAe,IAAZoB,EAAW,EAAXA,KAGC,OADAxD,aAAa2D,QAAQ,KAAMH,EAAKzB,KAAKlD,IAC9B,CACH4B,KAAM+C,EAAKzB,UAK3B6E,OAAQ,SAAC1G,EAAUgD,GAEf,OADAkB,IACOe,EAAW,GAAD,OAAIC,GAAU,CAC3BlD,OAAQ,QACRiB,KAAMC,KAAKC,UAAUH,EAAOzC,QAC7B2B,MAAK,kBAAe,CAAE3B,KAAjB,EAAG+C,WCpBb4B,EAAM,UAAMxD,EAAUvD,UAEb,GACXsI,iBAAkB,SAACzG,EAAUgD,GACzBkB,IADoC,MAEVlB,EAAOoC,WAAnBE,GAFsB,EAE5BD,KAF4B,EAEtBC,SAFsB,EAGXtC,EAAOuC,KAK1Bf,GAR8B,EAG5BiB,MAH4B,EAGrBC,MAKN,UAAMR,EAAN,YAAgBlF,EAAhB,oBAAoCgD,EAAOrE,KAEpD,OAAOsG,EAAWT,GAAKtC,MAAK,gBAAGkB,EAAH,EAAGA,QAAH,MAAwB,CAChD7C,KADwB,EAAY+C,KACzBzB,KACXqE,MAAQ9C,EAAQ+C,IAAI,iBAA6BC,SAAShD,EAAQ+C,IAAI,iBAAiBE,MAAM,KAAKC,MAAO,IAAlEhB,OAG/CoB,OAAQ,SAAC1G,EAAUgD,GAEf,OADAkB,IACOe,EAAW,GAAD,OAAIC,EAAJ,YAAclF,GAAY,CACvCgC,OAAQ,QACRiB,KAAMC,KAAKC,UAAUH,EAAOzC,QAC7B2B,MAAK,kBAAe,CACnB3B,KADI,EAAG+C,UAIfwD,OAAQ,SAAC9G,EAAUgD,GAGf,OAFAkB,IACAX,QAAQC,IAAIR,GACLiC,EAAW,GAAD,OAAIC,EAAJ,YAAclF,EAAd,oBAAkCgD,EAAOgE,aAAaC,OAAtD,oBAAwEjE,EAAOgE,aAAaE,QAAU,CACnHlF,OAAQ,WACTE,MAAK,kBAAe,CAAE3B,KAAjB,EAAG+C,WCjCb4B,EAAM,UAAMxD,EAAUvD,UAEb,GACXsI,iBAAkB,SAACzG,EAAUgD,GACzBkB,IADoC,MAEVlB,EAAOoC,WAAnBE,GAFsB,EAE5BD,KAF4B,EAEtBC,SAFsB,EAGXtC,EAAOuC,KAK1Bf,GAR8B,EAG5BiB,MAH4B,EAGrBC,MAKN,UAAMR,EAAN,YAAgBlF,EAAhB,6BAA6CgD,EAAOrE,KAE7D,OAAOsG,EAAWT,GAAKtC,MAAK,gBAAGkB,EAAH,EAAGA,QAAH,MAAwB,CAChD7C,KADwB,EAAY+C,KACzBzB,KACXqE,MAAQ9C,EAAQ+C,IAAI,iBAA6BC,SAAShD,EAAQ+C,IAAI,iBAAiBE,MAAM,KAAKC,MAAO,IAAlEhB,OAG/CuB,OAAQ,SAAC7G,EAAUgD,GAEf,OADAkB,IACOe,EAAW,GAAD,OAAIC,EAAJ,YAAclF,EAAd,oBAAkCgD,EAAOzC,KAAK4G,SAAW,CACtEnF,OAAQ,OACRiB,KAAMC,KAAKC,UAAU,CAAEgE,QAASnE,EAAOzC,KAAK4G,QAASC,WAAYpE,EAAOzC,KAAK6G,eAC9ElF,MAAK,kBAAe,CACnB3B,KADI,EAAG+C,UAIfoD,OAAQ,SAAC1G,EAAUgD,GAEf,OADAkB,IACOe,EAAW,GAAD,OAAIC,EAAJ,YAAclC,EAAOrE,GAArB,YAA2BqB,GAAY,CACpDgC,OAAQ,OACRiB,KAAMC,KAAKC,UAAUH,EAAOzC,QAC7B2B,MAAK,kBAAe,CACnB3B,KADI,EAAG+C,UAIfwD,OAAQ,SAAC9G,EAAUgD,GAEf,OADAkB,IACOe,EAAW,GAAD,OAAIC,EAAJ,iBAA2B,CACxClD,OAAQ,OACRiB,KAAMC,KAAKC,UAAU,CAACa,cAAehB,EAAOgE,aAAarF,UAC1DO,MAAK,kBAAe,CAAE3B,KAAjB,EAAG+C,UAEfyD,WAAY,SAAC/G,EAAUgD,GAEnB,OADAkB,IACOe,EAAW,GAAD,OAAIC,EAAJ,qCAAuClC,EAAO4D,IAAI,IAAM,CACrE5E,OAAQ,WACTE,MAAK,kBAAe,CAAE3B,KAAjB,EAAG+C,UAEf+D,UAAW,SAACrH,EAAUgD,GAElB,OADAkB,IACOe,EAAW,GAAD,OAAIC,EAAJ,iCAA2C,CACxDlD,OAAQ,WACTE,MAAK,kBAAe,CAAE3B,KAAjB,EAAG+C,WCrDb4B,EAAM,UAAMxD,EAAUvD,SAAhB,UAEG,GACXmJ,WAAY,SAACtH,EAAUgD,GAEnB,OADAkB,IACOe,EAAW,GAAD,OAAIC,EAAJ,UAAoB,CACjClD,OAAQ,OACRiB,KAAMC,KAAKC,UAAUH,KACtBd,MAAK,kBAAe,CACnB3B,KADI,EAAG+C,WCRb4B,EAAM,UAAMxD,EAAUvD,UAEb,GACXsI,iBAAkB,SAACzG,EAAUgD,GACzBkB,IADoC,MAEVlB,EAAOoC,WAAnBE,GAFsB,EAE5BD,KAF4B,EAEtBC,SAFsB,EAGXtC,EAAOuC,KAK1Bf,GAR8B,EAG5BiB,MAH4B,EAGrBC,MAKN,UAAMR,EAAN,0BAA8BlC,EAAOrE,KAE9C,OAAOsG,EAAWT,GAAKtC,MAAK,gBAAGkB,EAAH,EAAGA,QAAH,MAAwB,CAChD7C,KADwB,EAAY+C,KACzBzB,KACXqE,MAAQ9C,EAAQ+C,IAAI,iBAA6BC,SAAShD,EAAQ+C,IAAI,iBAAiBE,MAAM,KAAKC,MAAO,IAAlEhB,OAG/CwB,OAAQ,SAAC9G,EAAUgD,GAGf,OAFAkB,IACAX,QAAQC,IAAIR,GACLiC,EAAW,GAAD,OAAIC,EAAJ,4BAA8BlC,EAAOgE,aAAaE,OAAlD,oBAAoElE,EAAOgE,aAAaC,QAAU,CAC/GjF,OAAQ,WACTE,MAAK,kBAAe,CAAE3B,KAAjB,EAAG+C,UAEfiE,cAAe,SAACvH,EAAUgD,GAEtB,OADAkB,IACOe,EAAW,GAAD,OAAIC,EAAJ,iBAA2B,CACxClD,OAAQ,OACRiB,KAAMC,KAAKC,UAAU,CAACxE,GAAIqE,EAAOiE,OAAQE,QAASnE,EAAOkE,WAC1DhF,MAAK,kBAAe,CACnB3B,KADI,EAAG+C,W,SChBbkE,GAAgB,CAClB,QAAW,CACPC,aAAcC,GAElB,MAAS,CACLD,aAAcE,GAElB,MAAS,CACLF,aAAcE,GAElB,QAAW,CACPF,aAAcG,GAElB,OAAU,CACNH,aAAcI,GAElB,MAAS,CACLJ,aAAcK,GAElB,YAAe,CACXL,aAAcM,IAIP,YAACC,EAAMhI,EAAUgD,GAC5B,IAAIiF,EAEJ,IACIA,EAAsBT,GAAcxH,GAAUyH,aAChD,MAAOS,GACL,MAAM,IAAI7F,MAAM,uDAGpB,OAAO2F,GACH,KAAKG,KACD,OAAOF,EAAoB9C,QAAQnF,EAAUgD,GACjD,KAAKoF,KACD,OAAOH,EAAoB1B,OAAOvG,EAAUgD,GAChD,KAAKqF,KACD,OAAOJ,EAAoBxB,iBAAiBzG,EAAUgD,GAC1D,KAAKsF,KACD,OAAOL,EAAoBzB,QAAQxG,EAAUgD,GACjD,KAAKuF,KACD,OAAON,EAAoBvB,OAAO1G,EAAUgD,GAChD,KAAKwF,KACD,OAAOP,EAAoBtB,WAAW3G,EAAUgD,GACpD,KAAKyF,KACD,OAAOR,EAAoBpB,OAAO7G,EAAUgD,GAChD,KAAK0F,KACD,OAAOT,EAAoBnB,OAAO9G,EAAUgD,GAChD,KAAK2F,KACD,OAAOV,EAAoBlB,WAAW/G,EAAUgD,GACpD,IAAK,YACD,OAAOiF,EAAoBZ,UAAUrH,EAAUgD,GACnD,IAAK,aACD,OAAOiF,EAAoBX,WAAWtH,EAAUgD,GACpD,IAAK,gBACD,OAAOiF,EAAoBV,cAAcvH,EAAUgD,GACvD,QACI,MAAO,CACHzC,KAAM,GACN2F,MAAO,K,+CCtEjB0C,GAAYC,cAAW,SAAC3L,GAAD,MAAY,CACrC4L,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,YAAa,OACbC,WAAY,YAIH,cACX,IAAMC,EAAUP,KAChB,OACI,gBAACQ,GAAA,EAAD,KACI,gBAACC,GAAA,EAAD,CAAOlJ,MAAM,cACb,gBAACmJ,GAAA,EAAD,CACIC,UAAWJ,EAAQL,MACnB3I,MAAM,iBACN2I,MAAM,cACNU,MAAM,QAEV,2BAEA,gBAACC,GAAA,EAAD,CACIC,QAAQ,KACRC,MAAM,gBACNC,MAAM,UAHV,mDCxBG,cACX,OACI,gBAACR,GAAA,EAAD,KACI,gBAACC,GAAA,EAAD,CAAOlJ,MAAM,cACb,gBAACsJ,GAAA,EAAD,CACIC,QAAQ,KACRC,MAAM,gBACNC,MAAM,UAHV,gD,oBCTNhB,GAAYC,cAAW,kBAAMgB,aAAa,CAC9C,UAAW,CACT,IAAK,CACHC,UAAW,aACXC,OAAQ,EACRC,QAAS,GAEXC,KAAM,CACJ,yBAA0B,cAC1B,0BAA2B,YAC3BjB,OAAQ,OACRD,MAAO,QAET9F,KAAM,CACJiH,gBAAiB,UACjBlB,OAAQ,OACRD,MAAO,QAETxG,EAAG,CACD4H,eAAgB,QAElB,QAAS,CACPnB,OAAQ,OACRD,MAAO,cAWEqB,GANM,WAGnB,OAFAxB,KAEO,M,6GCNMyB,GAvBFC,sBAAW,WAIrBC,GAAS,IAHVC,EAGS,EAHTA,SAGS,IAFTrK,aAES,MAFD,GAEC,EADNsK,EACM,qCACT,OACE,uCACEF,IAAKA,GACDE,GAEJ,kBAACC,GAAA,EAAD,KACE,+BAAQvK,IAETqK,MCHD5B,GAAYC,cAAW,SAAC3L,GAAD,MAAY,CACvCyN,KAAM,CACJT,gBAAiBhN,EAAME,QAAQC,WAAWE,MAC1CyL,OAAQ,OACR4B,cAAe1N,EAAM2N,QAAQ,GAC7BC,WAAY5N,EAAM2N,QAAQ,IAE5B/B,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,YAAa,OACbC,WAAY,QAEd6B,eAAgB,CACdpB,MAAOzM,EAAME,QAAQY,KAAKD,eAqGfiN,GAjGD,WACZ,IAAM7B,EAAUP,KACV7F,EAAQkI,eACRC,EAASC,eACTjL,EAAWkL,eAEbtL,aAAaC,QAAQ,gBACvBG,EAAS,KAPO,MAUcmL,mBAAS,IAVvB,oBAUX5K,EAVW,KAUD6K,EAVC,OAWcD,mBAAS,IAXvB,oBAWX3K,EAXW,KAWD6K,EAXC,KAwBlB,OACE,kBAAC,GAAD,CACEhC,UAAWJ,EAAQwB,KACnBxK,MAAM,SAEN,kBAACqL,GAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,SACd1C,OAAO,OACP2C,eAAe,UAEf,kBAACC,GAAA,EAAD,CAAWC,SAAS,MAClB,kBAACvC,GAAA,EAAD,CACEC,UAAWJ,EAAQL,MACnB3I,MAAM,iBACN2I,MAAM,cACNU,MAAM,QAER,kBAACgC,GAAA,EAAD,CAAKM,GAAI,GACP,kBAACrC,GAAA,EAAD,CACEE,MAAM,UACND,QAAQ,KACRE,MAAM,UAHR,gBAQF,0BACEmC,SAvCW,SAAA7D,GACfA,EAAE8D,iBACFjJ,EAAO,CAACtC,WAAUC,aACjBwB,MAAM,SAAA+J,GACHf,EAAO,wBAEVgB,OAAO,SAAAC,GACJjB,EAAO,uCAkCL,kBAAC,KAAD,CACMlK,WAAS,EACTM,MAAM,WACNyI,OAAO,SACPnL,KAAK,WACLwN,SAAU,SAAAlE,GAAC,OAAIoD,EAAYpD,EAAEmE,OAAOC,QACpCtE,KAAK,OACLsE,MAAO7L,EACPiJ,QAAQ,WACR6C,WAAY,CAAEhD,UAAWJ,EAAQ4B,kBAEnC,kBAAC,KAAD,CACE/J,WAAS,EACTM,MAAM,WACNyI,OAAO,SACPnL,KAAK,WACLwN,SAAU,SAAAlE,GAAC,OAAIqD,EAAYrD,EAAEmE,OAAOC,QACpCtE,KAAK,WACLsE,MAAO5L,EACPgJ,QAAQ,WACR6C,WAAY,CAAEhD,UAAWJ,EAAQ4B,kBAEnC,kBAACS,GAAA,EAAD,CAAKgB,GAAI,GACP,kBAACC,GAAA,EAAD,CACE9C,MAAM,UACN3I,WAAS,EACT0L,KAAK,QACL1E,KAAK,SACL0B,QAAQ,aALV,WAWV,kBAACiD,GAAA,EAAD,CACEC,iBAAkB,UClHxBhE,GAAYC,cAAW,SAAC3L,GAAD,MAAY,CACvCyN,KAAM,CACJT,gBAAiBhN,EAAME,QAAQC,WAAWC,QAC1CmO,QAAS,OACTzC,OAAQ,OACR6D,SAAU,SACV9D,MAAO,QAET+D,QAAS,CACPrB,QAAS,OACTsB,KAAM,WACNF,SAAU,SACV/B,WAAY,IAEdkC,iBAAkB,CAChBvB,QAAS,OACTsB,KAAM,WACNF,SAAU,UAEZI,QAAS,CACPF,KAAM,WACN/D,OAAQ,OACR6D,SAAU,YAsBCK,GAlBK,WAClB,IAAM/D,EAAUP,KAEhB,OACE,kBAACuE,GAAA,EAAD,CAAejQ,MAAOA,GAClB,kBAAC,GAAD,MAEA,yBAAKqM,UAAWJ,EAAQwB,MACpB,yBAAKpB,UAAWJ,EAAQ6D,kBACpB,yBAAKzD,UAAWJ,EAAQ8D,SACpB,kBAAC,GAAD,W,+aC3BLG,GAdU,SAACvK,GACtB,OAAOwK,KAAUC,SACb,CACIzK,OAAQA,EACR0K,SAAS,EACTC,WAAW,EACXC,WAAW,EAEXC,QAAQ,KCqDd9E,GAAYC,cAAW,iBAAO,CAChC8E,gBAAiB,CACbhE,MAAO,MACPiE,MAAO,QACP7D,OAAQ,OAEZ8D,gBAAiB,CACblE,MAAO,WAITmE,GAAa,SAACxO,GAChB,OACI,gBAACyO,GAAA,EAAWzO,EAER,gBAAC0O,GAAA,EAAD,CACIhN,WAAS,EACTC,OAAO,IACPgN,UAAQ,EACRvE,QAAQ,eAMlBwE,GAAc,SAAC5O,GACjB,IAAM6J,EAAUP,KAEZW,EAKAjK,EALAiK,UAGA4E,GAEA7O,EAJA8O,SAIA9O,EAHA+O,QAGA/O,EAFA6O,YACG1D,EAPoB,aAQvBnL,EARuB,mDAevBgP,eALAC,EAVuB,EAUvBA,YACAvO,EAXuB,EAWvBA,SACAwO,EAZuB,EAYvBA,aACAvO,EAbuB,EAavBA,SACAiG,EAduB,EAcvBA,MAKEgF,EAASC,eACTjL,EAAWkL,eApBU,EAqBGC,oBAAS,GArBZ,oBAqBpBoD,EArBoB,KAqBXC,EArBW,KAuBrBjH,EAAekH,eAvBM,EAyBHtD,oBAAS,GAzBN,oBAyBpBuD,EAzBoB,KAyBdC,EAzBc,KA2BrBC,EAAS,kBAAMrH,EACpBJ,UAAU,SAAU,IACpBnF,MAAM,SAAAC,GACHjC,EAAS,UACTgL,EAAO,wCACPwD,GAAW,GACXG,GAAQ,MAEX3C,OAAO,SAAA7H,GACJ6G,EAAO7G,EAAM0K,SACbL,GAAW,OAGTM,EAAiB,WACnB,OACI,gBAACC,GAAA,EAAD,CACIL,KAAMA,EACNM,QAAS,kBAAML,GAAQ,IACvBM,kBAAgB,qBAChBC,mBAAiB,4BAEjB,gBAACC,GAAA,EAAD,CAAa1Q,GAAG,sBAAhB,6BACA,gBAAC2Q,GAAA,EAAD,KACA,gBAACC,GAAA,EAAD,CAAmB5Q,GAAG,4BAAtB,qDAIA,gBAAC6Q,GAAA,EAAD,KACA,gBAAC/C,GAAA,EAAD,CAAQgD,QAAS,kBAAMZ,GAAQ,IAAQlF,MAAM,WAA7C,UAGA,gBAAC8C,GAAA,EAAD,CAAQgD,QAASX,EAAQnF,MAAM,UAAU+F,WAAS,GAAlD,cAQZ,OACI,gBAACC,GAAA,EAAD,eAAYpG,UAAWA,GAAeqG,aAAsBnF,IACxD,gBAACoF,GAAA,EAAD,CAAc5P,SAAUA,IACxB,gBAAC6P,GAAA,EAAD,CACIC,SAAoB,IAAV7J,EACVlG,SAAUA,EACVuF,KAAMgJ,EACNC,aAAcA,EACdL,WAAYA,IAGhB,gBAACa,EAAD,MACA,gBAACvC,GAAA,EAAD,CACIgD,QAAS,kBAAMZ,GAAQ,IACvBnF,QAAQ,WACRsG,UAAW,gBAAC,KAAD,MACXzG,UAAWJ,EAAQ0E,gBACnBkC,SAAUtB,GALd,uBAaCwB,GAAW,SAAA3Q,GAEpB,OACI,gBAAC4Q,GAAA,EAAD,iBAAU5Q,EAAV,CAAiB6Q,QAAS,gBAAC,GAAD,MAAiB9B,QAAS,gBAAC,GAAD,MAAgB/I,QAAS,GAAInF,MAAM,aAAaiQ,mBAAmB,IACnH,gBAACC,GAAA,EAAD,KACI,gBAAChP,EAAA,EAAD,CAAWJ,OAAO,OAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,YAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,aAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,aAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,iBAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,kBAClB,gBAACM,EAAA,EAAD,CAAeD,MAAM,SAASE,OAAQ,SAAAC,GAAM,OAAIA,EAASC,EAAUnD,WAAWkD,EAAM,QAAc,SAClG,gBAAC6O,GAAA,EAAD,MACA,gBAACC,GAAA,EAAD,SAMHC,GAAW,SAAAlR,GAAU,IAAD,EAEe+L,mBAAS,GAFxB,oBAEtBoF,EAFsB,KAENC,EAFM,KAIvBC,EAAyB,SAAArR,GAC3B,IAAMsR,EAAOC,eAEPC,EAAiBC,uBACnB,WACIH,EAAKI,OAAO,WAAY5D,GAAiBqD,MAC1C,IAGP,OACI,gBAAChE,GAAA,EAAD,CACIgD,QAASqB,EACTpH,QAAQ,YACRC,MAAM,UACNsH,MACI,CACIlI,MAAO,SANnB,aAsCR,OACI,gBAAClJ,EAAA,EAAD,eAAMJ,eAAe,EAAOa,UAxBd,SAAAC,GACd,IAAIC,EAAUD,EAmBd,cAjBOC,EAAQ0Q,eACR1Q,EAAQ2Q,gBACR3Q,EAAQ4Q,eACR5Q,EAAQ6Q,KACf7Q,EAAQ8Q,QAAU9Q,EAAQyG,cACnBzG,EAAQyG,OAEgB,kBAApBzG,EAAQ4B,QACX5B,EAAQ4B,QAAU,GAAKV,EAAUnD,WAAWsE,OAASrC,EAAQ4B,SAC7D5B,EAAQ4B,OAASV,EAAUnD,WAAWiC,EAAQ4B,SAItDmP,KAAK,+BAAD,OAC+BhR,EAAKE,SADpC,uBAC2DF,EAAKG,SADhE,OAIGF,IAI+ClB,EAAtD,CAA6DY,SAAS,SAClE,gBAACW,EAAA,EAAD,KACI,gBAACE,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,WACPC,SAAU,CAACC,iBAEf,gBAACC,EAAA,EAAD,CACIJ,WAAS,EACTC,OAAO,aAEX,mCACIgQ,MAAO,CAACO,SAAU,IADtB,QAGQ,CACIzI,MAAO,SAIf,gBAACU,GAAA,EAAD,CAAYgI,cAAY,GAAxB,mBAGA,gBAACC,GAAA,EAAD,CACIC,WAAS,EACTC,WAAW,SACX/G,QAAS,GAET,gBAAC6G,GAAA,EAAD,CACIG,MAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,GAAI,GACJC,GAAI,IAEJ,gBAACC,GAAA,EAAD,CACI7F,MAAOmE,EACP2B,KAAM,EACNC,IAAK,EACLC,IAAK,GACLC,kBAAkB,OAClBnG,SAAU,SAACoG,EAAOC,GAAR,OAAqB/B,EAAkB+B,OAGzD,gBAACf,GAAA,EAAD,CACIG,MAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAEJ,gBAACQ,GAAA,EAAD,CACIpR,MAAM,kBACNgL,MAAOmE,EACPzI,KAAK,SACLoE,SAAU,SAAAuG,GAAG,OAAIjC,EAAkBkC,MAAMD,EAAItG,OAAOC,OAAU,EAAKqG,EAAItG,OAAOC,QAC9EuG,OAAQ,SAAAF,GAAG,OAAIjC,GAAmBkC,MAAMD,EAAItG,OAAOC,OAAU,EAAKqG,EAAItG,OAAOC,OAAS,GAAKqG,EAAItG,OAAOC,QAAS,IAC/GvC,OAAO,QACP+I,WAAY,CACRV,KAAM,EACNC,IAAK,EACLC,IAAK,GACLtK,KAAM,SACN,kBAAmB,mBAI/B,gBAAC0J,GAAA,EAAD,CACIG,MAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAEJ,gBAACvB,EAAD,SAKZ,gBAACoC,GAAA,EAAD,CACI/R,WAAS,EACTC,OAAO,SACP+R,QAAS,CACL,CAAErU,GAAI,WAAYC,KAAM,YACxB,CAAED,GAAI,YAAaC,KAAM,UACzB,CAAED,GAAI,UAAWC,KAAM,WACvB,CAAED,GAAI,UAAWC,KAAM,YAE3BqU,aAAa,YACb/R,SAAU,CAACC,eACX+R,OAAQ,SAAAzR,GAAY,OAAQC,EAAUnD,WAAWkD,GAAoBC,EAAUnD,WAAWkD,GAA9BA,KAGhE,gBAAC0R,GAAA,EAAD,CACInS,WAAS,EACTC,OAAO,SACPK,MAAM,SACN0R,QAAStR,EAAUzC,sBACnBiC,SAAU,CAACC,iBAEf,gBAACJ,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,iBAEX,gBAACF,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,qBAQdmS,GAAW,SAAA9T,GAEpB,IAAM4L,EAASC,eACTjL,EAAWkL,eACXiI,EAAUC,eAJa,EAYejI,mBAAS,GAZxB,oBAYtBoF,EAZsB,KAYNC,EAZM,KAcvBC,EAAyB,SAAArR,GAC3B,IAAMsR,EAAOC,eAEPC,EAAiBC,uBACnB,WACIH,EAAKI,OAAO,WAAY5D,GAAiBqD,MAC1C,IAGP,OACI,gBAAChE,GAAA,EAAD,CACIgD,QAASqB,EACTpH,QAAQ,YACRC,MAAM,UACNsH,MACI,CACIlI,MAAO,SANnB,aAuBR,OACI,gBAACwK,GAAA,EAAD,eAAQC,UA1CM,SAAC,GAAa,EAAXjT,KACjB2K,EAAO,mCACPhL,EAAS,UACTmT,KAuC8B5T,eAAe,GAAWH,EAAxD,CAA+DgB,UATjD,SAAAC,GAKd,OAJAgR,KAAK,+BAAD,OAC+BhR,EAAKE,SADpC,uBAC2DF,EAAKG,SADhE,OAIGH,KAKH,gBAACM,EAAA,EAAD,CAAYpB,eAAe,GACvB,gBAACsB,EAAA,EAAD,CACIE,OAAO,WACPC,SAAU,CAACC,eACXH,WAAS,IAEb,gBAACI,EAAA,EAAD,CACIJ,WAAS,EACTC,OAAO,WACPK,MAAM,WACNJ,SAAU,CAACC,iBAEf,mCACI8P,MAAO,CAACO,SAAU,IADtB,QAGQ,CACIzI,MAAO,SAIf,gBAACU,GAAA,EAAD,CAAYgI,cAAY,GAAxB,mBAGA,gBAACC,GAAA,EAAD,CACIC,WAAS,EACTC,WAAW,SACX/G,QAAS,GAET,gBAAC6G,GAAA,EAAD,CACIG,MAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,GAAI,GACJC,GAAI,IAEJ,gBAACC,GAAA,EAAD,CACI7F,MAAOmE,EACP2B,KAAM,EACNC,IAAK,EACLC,IAAK,GACLC,kBAAkB,OAClBnG,SAAU,SAACoG,EAAOC,GAAR,OAAqB/B,EAAkB+B,OAGzD,gBAACf,GAAA,EAAD,CACIG,MAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAEJ,gBAACQ,GAAA,EAAD,CACIpR,MAAM,kBACNgL,MAAOmE,EACPzI,KAAK,SACLoE,SAAU,SAAAuG,GAAG,OAAIjC,EAAkBkC,MAAMD,EAAItG,OAAOC,OAAU,EAAKqG,EAAItG,OAAOC,QAC9EuG,OAAQ,SAAAF,GAAG,OAAIjC,GAAmBkC,MAAMD,EAAItG,OAAOC,OAAU,EAAKqG,EAAItG,OAAOC,OAAS,GAAKqG,EAAItG,OAAOC,QAAS,IAC/GvC,OAAO,QACP+I,WAAY,CACRV,KAAM,EACNC,IAAK,EACLC,IAAK,GACLtK,KAAM,SACN,kBAAmB,mBAI/B,gBAAC0J,GAAA,EAAD,CACIG,MAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAEJ,gBAACvB,EAAD,SAMZ,gBAACoC,GAAA,EAAD,CACI/R,WAAS,EACTC,OAAO,SACP+R,QAAS,CACL,CAAErU,GAAI,WAAYC,KAAM,YACxB,CAAED,GAAI,YAAaC,KAAM,UACzB,CAAED,GAAI,UAAWC,KAAM,WACvB,CAAED,GAAI,UAAWC,KAAM,YAE3BqU,aAAa,YACb/R,SAAU,CAACC,iBAEf,gBAACgS,GAAA,EAAD,CACInS,WAAS,EACTC,OAAO,SACPK,MAAM,SACN0R,QAAStR,EAAUzC,sBACnBgU,aAAcvR,EAAU1C,kBACxBkC,SAAU,CAACC,iBAEf,gBAACJ,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,iBAEX,gBAACF,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,kBAEX,gBAACwS,GAAA,EAAD,CACIzS,WAAS,EACTM,MAAM,4BACNL,OAAO,6BAEX,gBAACwS,GAAA,EAAD,CACIzS,WAAS,EACTM,MAAM,sCACNL,OAAO,6BAQdyS,GAAW,SAAApU,GACpB,IAAM6J,EAAUP,KACVsC,EAASC,eACTjL,EAAWkL,eACXiI,EAAUC,eAEVK,EAAiB,SAAC,GAAc,IAAblS,EAAY,EAAZA,OAAY,EACEmS,aAC3B,SACA,CAACnS,EAAO9C,IACR,CACI6U,UAAW,SAACjT,GACR2K,EAAO,+BACPhL,EAAS,UAAD,OAAWuB,EAAO9C,GAAlB,YACR0U,KAEJQ,QAAS,YAAa,IAAXtT,EAAU,EAAVA,KACP2K,EAAO3K,MAXU,oBAC1BuT,EAD0B,KACXrF,EADW,KACXA,QADW,EAgBLpD,oBAAS,GAhBJ,oBAgBtBuD,EAhBsB,KAgBhBC,EAhBgB,KAkBvBkF,EAAc,WAChB,OACI,gBAAC9E,GAAA,EAAD,CACIL,KAAMA,EACNM,QAAS,kBAAML,GAAQ,IACvBM,kBAAgB,qBAChBC,mBAAiB,4BAEjB,gBAACC,GAAA,EAAD,CAAa1Q,GAAG,sBAAhB,6BACA,gBAAC2Q,GAAA,EAAD,KACA,gBAACC,GAAA,EAAD,CAAmB5Q,GAAG,4BAAtB,6DAIA,gBAAC6Q,GAAA,EAAD,KACA,gBAAC/C,GAAA,EAAD,CAAQgD,QAAS,kBAAMZ,GAAQ,IAAQlF,MAAM,WAA7C,UAGA,gBAAC8C,GAAA,EAAD,CAAQgD,QAASqE,EAAanK,MAAM,UAAU+F,WAAS,GAAvD,cAQhB,OACI,gCACI,gBAACqE,EAAD,MACA,gBAACtH,GAAA,EAAD,CAAQuD,UAAW,gBAAC,KAAD,MAAgBP,QAAU,kBAAMZ,GAAQ,IAAQkB,SAAUtB,EAASlF,UAAWJ,EAAQwE,gBAAiBjE,QAAQ,YAAlI,gBArDiB,EA4DCsK,aAAU,UA5DX,oBA4DtBnN,EA5DsB,KA4DZ4H,EA5DY,KA4DZA,QAEXwF,EAAqB,SAAA3U,GAEvB,OACI,gBAACC,EAAA,EAAYD,EACT,gBAACE,EAAA,EAAD,CAAYuQ,SAAUtB,MAqB5ByF,EAAc,SAAC,GAAc,IAAbzS,EAAY,EAAZA,OACZgG,EAAekH,eAarB,OAAIlN,IAAWA,EAAO0S,WACX,gBAAC1H,GAAA,EAAD,CAAQuD,UAAW,gBAAC,KAAD,MAAmBP,QAZ3B,kBAAMhI,EAC3BF,cAAc,cAAe9F,GAC7BS,MAAM,SAAAC,GACHjC,EAAS,UAAD,OAAWuB,EAAOyF,OAAlB,YACRgE,EAAO,kCACPmI,OAEHnH,OAAO,SAAA7H,GACJ6G,EAAO7G,EAAM0K,aAIwDgB,SAAUtB,EAAS9E,MAAM,UAAUD,QAAQ,QAAzG,gBAIA,kCAIT0K,EAAqB,SAAC,GAAwB,IAAvB3S,EAAsB,EAAtBA,OAAWnC,EAAW,2BAE/C,OAAQmC,IAAWA,EAAO4S,aACtB,gBAAC9D,GAAA,EAAD,iBAA6BjR,EAA7B,CAAoCmC,OAAQA,MAjHvB,EAqHG4J,mBAC5B3J,EAAU3C,gBAtHe,oBAqHtBuV,EArHsB,aAyHSjJ,mBAClC3J,EAAU5C,iBA1He,oBAyHtByV,EAzHsB,UA6H7B,OACI,gBAACC,GAAA,EAASlV,EACN,gBAACmV,GAAA,EAAD,KACI,gBAACC,GAAA,EAAD,CAAKpT,MAAM,gBACP,gBAACD,EAAA,EAAD,CAAWJ,OAAO,OAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,YAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,aAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,aAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,iBAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,kBAClB,gBAACM,EAAA,EAAD,CAAeD,MAAM,SAASE,OAAQ,SAAAC,GAAM,OAAIA,EAASC,EAAUnD,WAAWkD,EAAM,QAAc,SAClG,gBAACF,EAAA,EAAD,CACID,MAAM,SACNL,OAAO,SACPO,OAAQ,SAAAC,GAAW,IAAD,EACd,cAAOA,QAAP,IAAOA,GAAP,UAAOA,EAAQkT,cAAf,aAAO,EAAgBC,KACnB,SAAA/C,GACI,OAAO,gBAACgD,GAAA,EAAD,CAAMvT,MAAOgT,EAASzC,GAAOnS,IAAKmS,WAM7D,gBAAC6C,GAAA,EAAD,CAAKpT,MAAM,eACP,gBAACwT,GAAA,EAAD,CAAoBC,UAAU,cAAc1I,OAAO,KAAK2I,UAAU,GAC9D,gBAAC3E,GAAA,EAAD,KACI,gBAAChP,EAAA,EAAD,CAAWJ,OAAO,OAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,YAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,aAClB,gBAACI,EAAA,EAAD,CAAWC,MAAM,UAAUL,OAAO,YAClC,gBAACI,EAAA,EAAD,CAAWC,MAAM,YAAYL,OAAO,cACpC,gBAACM,EAAA,EAAD,CAAeD,MAAM,YAAYE,OAAQ,SAAAC,GAAM,OAAIA,EAASC,EAAUjD,aAAagD,EAAOwT,MAAQ,SAClG,gBAACC,GAAA,EAAD,CAAcjU,OAAO,eACrB,gBAACiU,GAAA,EAAD,CAAcjU,OAAO,gBACrB,gBAACM,EAAA,EAAD,CACID,MAAM,SACNL,OAAO,SACPO,OAAQ,SAAAC,GAAW,IAAD,EACd,cAAOA,QAAP,IAAOA,GAAP,UAAOA,EAAQkT,cAAf,aAAO,EAAgBC,KACnB,SAAA/C,GACI,OAAO,gBAACgD,GAAA,EAAD,CAAMvT,MAAOiT,EAAW1C,GAAOnS,IAAKmS,UAK3D,gBAACqC,EAAD,MACA,gBAACE,EAAD,SAIZ,gBAACM,GAAA,EAAD,CAAKpT,MAAM,eACP,gBAACwT,GAAA,EAAD,CAAoBC,UAAU,SAAS1I,OAAO,KAAK2I,UAAU,GACzD,gBAAC3E,GAAA,EAAD,KACI,gBAAChP,EAAA,EAAD,CAAWJ,OAAO,OAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,YAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,eAClB,gBAACI,EAAA,EAAD,CAAWJ,OAAO,UAClB,gBAACM,EAAA,EAAD,CACID,MAAM,SACNE,OAAQ,SAAAC,GAAM,OAAIA,EAASC,EAAUnD,WAAWkD,EAAM,QAAc,SAExE,gBAAC8O,GAAA,EAAD,QAIR,gBAACoD,EAAD,OAEJ,gBAACe,GAAA,EAAD,CAAKpT,MAAM,gBACP,gBAACT,EAAA,EAAD,CACIb,SAAS,SACTmV,KA5HC,SAAAC,GACjBvO,EACI,CAACwO,QAAS,CAAC9U,KAAM,CAAC4G,QAASiO,EAAIzW,GAAIyI,WAAYgO,EAAIhO,cACnD,CACIoM,UAAW,YAAa,IAAXjT,EAAU,EAAVA,KACT2K,EAAO3K,EAAKwO,SACZ7O,EAAS,UAAD,OAAWkV,EAAIzW,GAAf,YACR0U,KAEJQ,QAAS,YAAa,IAAXtT,EAAU,EAAVA,KACP2K,EAAO3K,OAmHHO,QAAU,gBAACmT,EAAD,OAEV,gBAACqB,GAAA,EAAD,CACItU,WAAS,EACTC,OAAO,oB,UClsB7BsU,GAAa,SAACjW,GAChB,OACI,kBAACyO,GAAA,EAAWzO,EAER,kBAAC0O,GAAA,EAAD,CACIhN,WAAS,EACTC,OAAO,IACPgN,UAAQ,EACRvE,QAAQ,eAMX8L,GAAW,SAAAlW,GACpB,OACI,kBAAC4Q,GAAA,EAAD,iBACQ5Q,EADR,CAEI+O,QAAS,kBAAC,GAAD,MACT/I,QAAS,GACTnF,MAAM,aACNiQ,mBAAmB,IAEnB,kBAACC,GAAA,EAAD,KACI,kBAAChP,EAAA,EAAD,CACIJ,OAAO,OAEX,kBAACI,EAAA,EAAD,CACIL,WAAS,EACTC,OAAO,YAEX,kBAACI,EAAA,EAAD,CACIJ,OAAO,aAEX,kBAACI,EAAA,EAAD,CACIJ,OAAO,SAEX,kBAACiU,GAAA,EAAD,CACI5T,MAAM,qBACNL,OAAO,kBAEX,kBAACiU,GAAA,EAAD,CACI5T,MAAM,kBACNL,OAAO,eAEX,kBAACM,EAAA,EAAD,CACID,MAAM,SACNE,OAAQ,SAAAC,GAAM,OAAIA,EAASC,EAAUnD,WAAWkD,EAAM,QAAc,SAExE,kBAAC6O,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,SAMHkF,GAAW,SAAAnW,GAqBpB,OACI,kBAACO,EAAA,EAAD,eAAMJ,eAAe,EAAOa,UApBd,SAAAC,GACd,IAAIC,EAAUD,EAgBd,cAdOC,EAAQ0Q,eACR1Q,EAAQ2Q,gBACR3Q,EAAQ4Q,QACf5Q,EAAQkV,aAAelV,EAAQmV,qBACxBnV,EAAQmV,cACfnV,EAAQoV,UAAYpV,EAAQqV,kBACrBrV,EAAQqV,WAEgB,kBAApBrV,EAAQ4B,QACX5B,EAAQ4B,QAAU,GAAKV,EAAUnD,WAAWsE,OAASrC,EAAQ4B,SAC7D5B,EAAQ4B,OAASV,EAAUnD,WAAWiC,EAAQ4B,SAI/C5B,IAG+ClB,EAAtD,CAA6DY,SAAS,SAClE,kBAACW,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,OACPC,SAAU,CAACC,iBAEf,kBAAC4R,GAAA,EAAD,CACI/R,WAAS,EACTC,OAAO,SACP+R,QAAS,CACL,CAAErU,GAAI,WAAYC,KAAM,YACxB,CAAED,GAAI,YAAaC,KAAM,UACzB,CAAED,GAAI,UAAWC,KAAM,WACvB,CAAED,GAAI,UAAWC,KAAM,YAE3BsC,SAAU,CAACC,eACX+R,OAAQ,SAAAzR,GAAY,OAAQC,EAAUnD,WAAWkD,GAAoBC,EAAUnD,WAAWkD,GAA9BA,KAEhE,kBAACgS,GAAA,EAAD,CACIzS,WAAS,EACTM,MAAM,qBACNL,OAAO,kBAEX,kBAACwS,GAAA,EAAD,CACIzS,WAAS,EACTM,MAAM,kBACNL,OAAO,kBAOd6U,GAAW,SAAAxW,GAEpB,IAAM4L,EAASC,eACTjL,EAAWkL,eACXiI,EAAUC,eAShB,OACI,kBAACC,GAAA,EAAD,eAAQC,UARM,SAAC,GAAc,IAAZjT,EAAW,EAAXA,KACjBgD,QAAQC,IAAIjD,GACZ2K,EAAO,mCACPhL,EAAS,UACTmT,KAI8B5T,eAAe,GAAWH,GACpD,kBAACuB,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,OACPC,SAAU,CAACC,iBAEf,kBAAC4R,GAAA,EAAD,CACI/R,WAAS,EACTC,OAAO,SACP+R,QAAS,CACL,CAAErU,GAAI,WAAYC,KAAM,YACxB,CAAED,GAAI,YAAaC,KAAM,UACzB,CAAED,GAAI,UAAWC,KAAM,WACvB,CAAED,GAAI,UAAWC,KAAM,YAE3BqU,aAAa,YACb/R,SAAU,CAACC,eACX+R,OAAQ,SAAAzR,GAAY,OAAQC,EAAUnD,WAAWkD,GAAoBC,EAAUnD,WAAWkD,GAA9BA,KAEhE,kBAACgS,GAAA,EAAD,CACIzS,WAAS,EACTM,MAAM,qBACNL,OAAO,kBAEX,kBAACwS,GAAA,EAAD,CACIzS,WAAS,EACTM,MAAM,kBACNL,OAAO,kBAOd8U,GAAW,SAAAzW,GAEpB,IAAM4L,EAASC,eACTjL,EAAWkL,eACXiI,EAAUC,eACV7L,EAAekH,eALQ,EAMetD,oBAAS,GANxB,oBAMtB2K,EANsB,KAMNC,EANM,OAOH5K,mBAAS,OAPN,oBAOtB1J,EAPsB,KAOfuU,EAPe,OAQO7K,mBAAS,IARhB,oBAQtBjE,EARsB,KAQV+O,EARU,OAUCC,aAAU,WAVX,oBAUtB1P,EAVsB,KAUZ+H,EAVY,KAUZA,QAEX4H,EAA0B,SAAA/W,GAE5B,OACI,kBAACC,EAAA,EAAYD,EACT,kBAACE,EAAA,EAAD,CAAYuQ,SAAUtB,MAqB5BwF,EAAqB,SAAA3U,GAEvB,OACI,kBAACC,EAAA,EAAYD,EACT,kBAACE,EAAA,EAAD,CAAYuQ,SAAUiG,MAzCL,EAoEG3K,mBAC5B3J,EAAU5C,gBArEe,oBAoEtBwV,EApEsB,UAwE7B,OACI,kBAACE,GAAA,EAASlV,EACN,kBAACmV,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKpT,MAAM,gBACP,kBAACD,EAAA,EAAD,CAAWJ,OAAO,OAClB,kBAACI,EAAA,EAAD,CAAWJ,OAAO,YAClB,kBAACI,EAAA,EAAD,CAAWJ,OAAO,aAClB,kBAACI,EAAA,EAAD,CAAWJ,OAAO,SAClB,kBAACiU,GAAA,EAAD,CAAc5T,MAAM,4BAA6BL,OAAO,kBACxD,kBAACiU,GAAA,EAAD,CAAc5T,MAAM,kBAAmBL,OAAO,eAC9C,kBAACM,EAAA,EAAD,CACID,MAAM,SACNE,OAAQ,SAAAC,GAAM,OAAIA,EAASC,EAAUnD,WAAWkD,EAAM,QAAc,UAG5E,kBAACiT,GAAA,EAAD,CAAKpT,MAAM,gBACP,kBAACwT,GAAA,EAAD,CAAoBC,UAAU,UAAU1I,OAAO,KAAK2I,UAAU,GAC1D,kBAAC3E,GAAA,EAAD,KAEI,kBAAC9O,EAAA,EAAD,CACIN,OAAO,MACPK,MAAM,KACNE,OAAQ,SAAAC,GAAM,OAAIA,EAAO6U,KAAO7U,EAAO6U,KAAK3X,GAAK,SAErD,kBAAC0C,EAAA,EAAD,CACIJ,OAAO,YAEX,kBAACI,EAAA,EAAD,CACIJ,OAAO,aAEX,kBAACM,EAAA,EAAD,CACIN,OAAO,WACPK,MAAM,WACNE,OAAQ,SAAAC,GAAM,OAAIA,EAAO6U,KAAO7U,EAAO6U,KAAK7V,SAAW,SAE3D,kBAACc,EAAA,EAAD,CACID,MAAM,SACNE,OAAQ,SAAAC,GAAM,OAAIA,EAAO6U,KAAO5U,EAAUnD,WAAWkD,EAAO6U,KAAKlU,QAAU,SAG/E,kBAAC8S,GAAA,EAAD,CAAc5T,MAAM,cAAeL,OAAO,gBAC1C,kBAACM,EAAA,EAAD,CACID,MAAM,SACNL,OAAO,SACPO,OAAQ,SAAAC,GAAW,IAAD,EACd,cAAOA,QAAP,IAAOA,GAAP,UAAOA,EAAQkT,cAAf,aAAO,EAAgBC,KACnB,SAAA/C,GACI,OAAO,kBAACgD,GAAA,EAAD,CAAMvT,MAAOgT,EAASzC,GAAOnS,IAAKmS,UAKzD,kBAACtB,GAAA,EAAD,SAIZ,kBAACmE,GAAA,EAAD,CAAKpT,MAAM,qBACP,kBAACT,EAAA,EAAD,CACQb,SAAS,UACTmV,KA9GH,SAAAC,GACjB1O,EACI,CAAC2O,QAAS,CAAC1W,GAAIyW,EAAIzW,GAAI4B,KAAM,CAAC+Q,QAAS8D,EAAIzW,GAAIwI,QAASiO,EAAIjO,QAASwN,OAAQS,EAAIT,QAAS3N,aAAcoO,IACxG,CACI5B,UAAW,YAAa,IAAXjT,EAAU,EAAVA,KACT2K,EAAO3K,EAAKwO,SACZ7O,EAAS,UAAD,OAAWkV,EAAIzW,GAAf,YACR0U,KAEJkD,UAAW,SAAClS,GACR6G,EAAO7G,EAAM0K,aAqGLjO,QAAU,kBAACuV,EAAD,MACVnW,SAAS,QAET,kBAACa,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,UACPC,SAAU,CAACC,iBAEf,kBAACgS,GAAA,EAAD,CACInS,WAAS,EACTC,OAAO,SACPK,MAAM,SACN0R,QAAStR,EAAUhD,sBACnBuU,aAAcvR,EAAU7C,kBACxBqC,SAAU,CAACC,mBAI3B,kBAACuT,GAAA,EAAD,CAAKpT,MAAM,gBACP,kBAACT,EAAA,EAAD,CACIb,SAAS,QACTmV,KA3GA,WAEhB,OADAc,GAAkB,GACXxO,EACNH,WAAW,QAAS,CACjBhD,WAAY,aACZgN,QAAShS,EAAMX,GACfyI,WAAYA,EACZpD,cAAelE,aAAa6D,eAE/BzB,MAAM,SAAAC,GAEHoB,QAAQC,IAAIrB,GACZ+T,EAAS/T,EAAS5B,KAAKkC,aACvByI,EAAO,qCACP+K,GAAkB,MAErB/J,OAAO,SAAA7H,GACJ6G,EAAO7G,EAAM0K,SACbkH,GAAkB,OA0FNnV,QAAU,kBAACmT,EAAD,OAEV,kBAACqB,GAAA,EAAD,CACIrU,OAAO,aACPmL,SAAW,SAAAlE,GAAqC,OAA/BiO,EAAcjO,EAAEmE,OAAOC,OAAepE,EAAEmE,OAAOC,OAChEpL,SAAU,CAACC,iBAGf,kBAACE,EAAA,EAAD,CACIL,WAAW,EACXM,MAAM,kBACNkV,UAAW7U,S,uHCtWjC8U,G,+MAOFC,aAAe,WACX,EAAKpX,MAAMqX,WAEP,UAEA7W,aAAaC,QAAQ,MAErB,YAEA,I,mEAdAD,aAAaC,QAAQ,gBACrB6W,KAAKF,iB,+BAiBH,IAAD,EACqCE,KAAKtX,MAA3BuX,GADf,EACGF,WADH,EACeE,SAAYvX,EAD3B,yCAGL,OACI,kBAACwX,GAAA,EAAD,eAAUxV,MAAOuV,EAAUA,EAAQpW,SAAW,IAAQnB,GAClD,kBAACyX,GAAA,EAAD,CACIC,GAAG,WACHC,YAAY,UACZC,SAAU,kBAAC,KAAD,a,GA5BRC,aAmDPC,GAJKC,cAZI,SAAAC,GACpB,IAEMC,EAAeD,EAAME,MAAMC,UAAZ,QAErB,MAAO,CACHZ,QAASU,EACHA,EAAahX,KAAKT,aAAaC,QAAQ,OACvC,QAMV,CAAE4W,iBAFcU,CAGlBZ,IClDaiB,GADM,SAAApY,GAAK,OAAI,kBAACqY,GAAA,EAAD,iBAAYrY,EAAZ,CAAmBsY,SAAU,kBAAC,GAAD,UCE5CC,GAFG,SAAAvY,GAAK,OAAI,kBAACwY,GAAA,EAAD,iBAAYxY,EAAZ,CAAmByY,OAAQJ,OCyCvCK,GAzBH,WAEV,OACE,kBAACC,EAAA,EAAD,aACE9X,MAAM,yBACNjD,MAAOA,EACPgb,UAAWhL,GACXiL,UAAWC,GACXtV,aAAcA,EACd2E,aAAcA,GACd4Q,aAAcC,EACdC,SAAUC,GACVC,OAAQZ,IATV,eAUgBS,GAEd,kBAACI,EAAA,EAAD,CAAU9Z,KAAK,YACf,kBAAC8Z,EAAA,EAAD,CAAUC,KAAMC,IAAeha,KAAK,QAAQ6F,QAAS,CAAEnD,MAAO,SAAWuX,KAAM5I,GAAU6I,KAAMtI,GAAUuI,KAAMrF,GAAU7M,OAAQuM,KACjI,kBAACsF,EAAA,EAAD,CAAUC,KAAMK,IAAWpa,KAAK,QAAQ6F,QAAS,CAAEnD,MAAO,SAAWuX,KAAMrD,GAAUsD,KAAMrD,GAAU5O,OAAQiP,GAAUiD,KAAMhD,KAC7H,kBAAC2C,EAAA,EAAD,CAAU9Z,KAAK,YACf,kBAAC8Z,EAAA,EAAD,CAAU9Z,KAAK,WACf,kBAAC8Z,EAAA,EAAD,CAAU9Z,KAAK,kBC5BDqa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAAS9X,OACP,kBAAC,IAAM+X,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1X,MAAK,SAAA2X,GACJA,EAAaC,gBAEd5N,OAAM,SAAA7H,GACLd,QAAQc,MAAMA,EAAM0K,c","file":"static/js/main.f755c943.chunk.js","sourcesContent":["export default {\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    h1: {\n      fontWeight: 500,\n      fontSize: 35,\n      letterSpacing: '-0.24px'\n    },\n    h2: {\n      fontWeight: 500,\n      fontSize: 29,\n      letterSpacing: '-0.24px'\n    },\n    h3: {\n      fontWeight: 500,\n      fontSize: 24,\n      letterSpacing: '-0.06px'\n    },\n    h4: {\n      fontWeight: 500,\n      fontSize: 20,\n      letterSpacing: '-0.06px'\n    },\n    h5: {\n      fontWeight: 500,\n      fontSize: 16,\n      letterSpacing: '-0.05px'\n    },\n    h6: {\n      fontWeight: 500,\n      fontSize: 14,\n      letterSpacing: '-0.05px'\n    },\n    overline: {\n      fontWeight: 500\n    }\n  };\n    ","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n    palette: {\n        background: {\n            default: '#F8F8F8',\n            light: '#FBFBFB',\n            dark: '#09A391',\n            white: colors.common.white,\n            black: colors.common.black\n        },\n        primary: {\n            main: '#09A391'\n        },\n        secondary: {\n            main: '#1192C4'\n        },\n        text: {\n            primary: '#1192C4',\n            secondary: '#09A391'\n        }\n    },\n    shadows,\n    typography\n});\n\nexport default theme;","export default [\n    'none',\n    '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n  ];\n  ","export default {\n    //for dev\n    // base_url: 'http://localhost:3030',\n    //for test\n    base_url: 'https://api-auth.xman.tech',\n    contentTypeJSON: 'application/json',\n    grantTypes: {\n        user_refresh_token: 'user_refresh_token'\n    },\n    statusList: ['inactive', 'activated', 'blocked', 'deleted'],\n    roleList: ['admin', 'regular'],\n    teamRoleList: ['admin', 'editor', 'agent'],\n    teamAccessListChoices: [\n        { id: 'TEAM_UPDATE_ASSIGNED', name: 'Allow to Update Team Details' },\n        { id: 'TEAM_SWITCH_ASSIGNED', name: 'Allow to Switch to Other Teams' },\n        { id: 'TEAM_LINK_READ_ASSIGNED', name: 'Allow to Read Team Link' },\n        { id: 'TEAM_LINK_UPDATE_ASSIGNED', name: 'Allow to Update Team Link' },\n        { id: 'MEMBER_READ_ASSIGNED', name: 'Allow to Read Team Members' },\n        { id: 'MEMBER_CREATE_ASSIGNED', name: 'Allow to Add Team Member' },\n        { id: 'MEMBER_UPDATE_ASSIGNED', name: 'Allow to Update Team Member' },\n        { id: 'MEMBER_DELETE_ASSIGNED', name: 'Allow to Delete Team Member' },\n    ],\n    teamAccessDefault: ['TEAM_SWITCH_ASSIGNED', 'TEAM_LINK_READ_ASSIGNED', 'MEMBER_READ_ASSIGNED'],\n    teamAccessList: {\n        'TEAM_UPDATE_ASSIGNED': 'Allow to Update Team Details',\n        'TEAM_SWITCH_ASSIGNED': 'Allow to Switch to Other Teams',\n        'TEAM_LINK_READ_ASSIGNED': 'Allow to Read Team Link',\n        'TEAM_LINK_UPDATE_ASSIGNED': 'Allow to Update Team Link',\n        'MEMBER_READ_ASSIGNED': 'Allow to Read Team Members',\n        'MEMBER_CREATE_ASSIGNED': 'Allow to Add Team Member',\n        'MEMBER_UPDATE_ASSIGNED': 'Allow to Update Team Member',\n        'MEMBER_DELETE_ASSIGNED': 'Allow to Delete Team Member'\n    },\n    userAccessList: {\n        'WA_STATE': 'Allow to Open/Close/Logout Whatsapp', // open, close, logout\n        'WA_NEW_MESSAGE_ASSIGNED': 'Allow to Send a new message to Assigned Conversations', // send a new message to assigned conversations\n        // CRUD on contacts\n        'CONTACTS_READ_ASSIGNED': 'Allow to Read Assigned Contacts',\n        'CONTACTS_READ_ALL': 'Allow to Read All Contacts',\n        'CONTACTS_CREATE': 'Allow to Create Contacts',\n        'CONTACTS_DELETE': 'Allow to Delete Contacts',\n        'CONTACTS_UPDATE': 'Allow to Update Contacts',\n        // CRUD on campaigns\n        'CAMPAIGNS_READ': 'Allow to Read Campaigns',\n        'CAMPAIGNS_CREATE': 'Allow to Create Campaigns',\n        'CAMPAIGNS_DELETE': 'Allow to Delete Campaigns',\n        'CAMPAIGNS_UPDATE': 'Allow to Update Campaigns',\n        // CRUD on keywords\n        'KEYWORD_READ': 'Allow to Read Keyword Reply',\n        'KEYWORD_CREATE': 'Allow to Create Keyword Reply',\n        'KEYWORD_DELETE': 'Allow to Delete Keyword Reply',\n        'KEYWORD_UPDATE': 'Allow to Update Keyword Reply',\n        // CRUD on message flows\n        'FLOWS_READ': 'Allow to Read Message Flows', \n        'FLOWS_CREATE': 'Allow to Create Message Flows',\n        'FLOWS_DELETE': 'Allow to Delete Message Flows',\n        'FLOWS_UPDATE': 'Allow to Update Message Flows',\n        // CRUD on tags\n        'TAGS_READ': 'Allow to Read Tags',\n        'TAGS_CREATE': 'Allow to Read Tags',\n        'TAGS_DELETE': 'Allow to Delete Tags',\n        //Service Auth\n        //CRUD on users\n        'USER_READ_ALL': 'Allow to Read All Users',\n        'USER_CREATE': 'Allow to Create User',\n        'USER_UPDATE_ASSIGNED': 'Allow to Update Profile Details',\n        'USER_UPDATE_ALL': 'Allow to Update All Users',\n        'USER_DELETE': 'Allow to Delete User',\n        //CRUD on teams\n        'TEAM_READ_ALL': 'Allow to Read All Teams',\n        'TEAM_CREATE': 'Allow to Create Team',\n        'TEAM_UPDATE_ALL': 'Allow to Update All Team',\n        'TEAM_DELETE': 'Allow to Delete Team',\n        'TEAM_SWITCH_ALL': 'Allow to Switch All Team Members',\n        //CRUD on teams Link\n        'TEAM_LINK_READ_ALL': 'Allow to Read All Team Link',\n        'TEAM_LINK_UPDATE_ALL': 'Allow to Update All Team Link',\n        'TEAM_LINK_CREATE': 'Allow to Create Team Link',\n        'TEAM_LINK_JOIN': 'Allow to Join to Other Team',\n        //CRUD on members\n        'MEMBER_READ_ALL': 'Allow to Read All Team Members',\n        'MEMBER_CREATE_ALL': 'Allow to Create Team Member to All Teams',\n        'MEMBER_UPDATE_ALL': 'Allow to Update Team Member to All Teams',\n        'MEMBER_DELETE_ALL': 'Allow to Delete Team Member to All Teams',\n        //CRUD on Tokens\n        'TOKEN_READ_ALL': 'Allow to Read All Tokens',\n        'TOKEN_CREATE': 'Allow to Create Token',\n        'TOKEN_DELETE_ASSIGNED': 'Allow to Delete Assigned Tokens',\n        'TOKEN_DELETE_ALL': 'Allow to Delete All Tokens',\n        'TEAM_NOTIFY': 'Allow to Notify Team',\n        'WA_HOOK': 'Allow to Send Notification via Whatsapp Hook',\n        'ADMIN_PANEL_LOGIN': 'Allow to Login to Admin Panel'\n    },\n    userAccessDefault: [\n        'WA_STATE',\n        'WA_NEW_MESSAGE_ASSIGNED', \n        'CONTACTS_READ_ASSIGNED',\n        'CONTACTS_READ_ALL',\n        'CONTACTS_CREATE',\n        'CONTACTS_DELETE',\n        'CONTACTS_UPDATE',\n        'CAMPAIGNS_READ',\n        'CAMPAIGNS_CREATE',\n        'CAMPAIGNS_DELETE',\n        'CAMPAIGNS_UPDATE',\n        'KEYWORD_READ',\n        'KEYWORD_CREATE',\n        'KEYWORD_DELETE',\n        'KEYWORD_UPDATE',\n        'FLOWS_READ', \n        'FLOWS_CREATE',\n        'FLOWS_DELETE',\n        'FLOWS_UPDATE',\n        'TAGS_READ',\n        'TAGS_CREATE',\n        'TAGS_DELETE',\n        'USER_UPDATE_ASSIGNED',\n        'TEAM_LINK_JOIN',\n        'TOKEN_DELETE_ASSIGNED',\n        'TEAM_NOTIFY'\n    ],\n    userAccessListChoices: [\n        { id: 'WA_STATE', name: 'Allow to Open/Close/Logout Whatsapp'}, // open, close, logout\n        { id: 'WA_NEW_MESSAGE_ASSIGNED', name: 'Allow to Send a new message to Assigned Conversations'}, // send a new message to assigned conversations\n        { id: 'CONTACTS_READ_ASSIGNED', name: 'Allow to Read Assigned Contacts'},\n        { id: 'CONTACTS_READ_ALL', name: 'Allow to Read All Contacts'},\n        { id: 'CONTACTS_CREATE', name: 'Allow to Create Contacts'},\n        { id: 'CONTACTS_DELETE', name: 'Allow to Delete Contacts'},\n        { id: 'CONTACTS_UPDATE', name: 'Allow to Update Contacts'},\n        { id: 'CAMPAIGNS_READ', name: 'Allow to Read Campaigns'},\n        { id: 'CAMPAIGNS_CREATE', name: 'Allow to Create Campaigns'},\n        { id: 'CAMPAIGNS_DELETE', name: 'Allow to Delete Campaigns'},\n        { id: 'CAMPAIGNS_UPDATE', name: 'Allow to Update Campaigns'},\n        { id: 'KEYWORD_READ', name: 'Allow to Read Keyword Reply'},\n        { id: 'KEYWORD_CREATE', name: 'Allow to Create Keyword Reply'},\n        { id: 'KEYWORD_DELETE', name: 'Allow to Delete Keyword Reply'},\n        { id: 'KEYWORD_UPDATE', name: 'Allow to Update Keyword Reply'},\n        { id: 'FLOWS_READ', name: 'Allow to Read Message Flows'}, \n        { id: 'FLOWS_CREATE', name: 'Allow to Create Message Flows'},\n        { id: 'FLOWS_DELETE', name: 'Allow to Delete Message Flows'},\n        { id: 'FLOWS_UPDATE', name: 'Allow to Update Message Flows'},\n        { id: 'TAGS_READ', name: 'Allow to Read Tags'},\n        { id: 'TAGS_CREATE', name: 'Allow to Read Tags'},\n        { id: 'TAGS_DELETE', name: 'Allow to Delete Tags'},\n        { id: 'USER_READ_ALL', name: 'Allow to Read All Users'},\n        { id: 'USER_CREATE', name: 'Allow to Create User'},\n        { id: 'USER_UPDATE_ASSIGNED', name: 'Allow to Update Profile Details'},\n        { id: 'USER_UPDATE_ALL', name: 'Allow to Update All Users'},\n        { id: 'USER_DELETE', name: 'Allow to Delete User'},\n        { id: 'TEAM_READ_ALL', name: 'Allow to Read All Teams'},\n        { id: 'TEAM_CREATE', name: 'Allow to Create Team'},\n        { id: 'TEAM_UPDATE_ALL', name: 'Allow to Update All Team'},\n        { id: 'TEAM_DELETE', name: 'Allow to Delete Team'},\n        { id: 'TEAM_SWITCH_ALL', name: 'Allow to Switch All Team Members'},\n        { id: 'TEAM_LINK_READ_ALL', name: 'Allow to Read All Team Link'},\n        { id: 'TEAM_LINK_UPDATE_ALL', name: 'Allow to Update All Team Link'},\n        { id: 'TEAM_LINK_CREATE', name: 'Allow to Create Team Link'},\n        { id: 'TEAM_LINK_JOIN', name: 'Allow to Join to Other Team'},\n        { id: 'MEMBER_READ_ALL', name: 'Allow to Read All Team Members'},\n        { id: 'MEMBER_CREATE_ALL', name: 'Allow to Create Team Member to All Teams'},\n        { id: 'MEMBER_UPDATE_ALL', name: 'Allow to Update Team Member to All Teams'},\n        { id: 'MEMBER_DELETE_ALL', name: 'Allow to Delete Team Member to All Teams'},\n        { id: 'TOKEN_READ_ALL', name: 'Allow to Read All Tokens'},\n        { id: 'TOKEN_CREATE', name: 'Allow to Create Token'},\n        { id: 'TOKEN_DELETE_ASSIGNED', name: 'Allow to Delete Assigned Tokens'},\n        { id: 'TOKEN_DELETE_ALL', name: 'Allow to Delete All Tokens'},\n        { id: 'TEAM_NOTIFY', name: 'Allow to Notify Team'},\n        { id: 'WA_HOOK', name: 'Allow to Send Notification via Whatsapp Hook'},\n        { id: 'ADMIN_PANEL_LOGIN', name: 'Allow to Login to Admin Panel'}\n    ],\n    getScopeList: [\n        'WA_STATE', // open, close, logout\n        'WA_NEW_MESSAGE_ASSIGNED', // send a new message to assigned conversations\n        // CRUD on contacts\n        'CONTACTS_READ_ASSIGNED',\n        'CONTACTS_READ_ALL',\n        'CONTACTS_CREATE',\n        'CONTACTS_DELETE',\n        'CONTACTS_UPDATE',\n        // CRUD on campaigns\n        'CAMPAIGNS_READ',\n        'CAMPAIGNS_CREATE',\n        'CAMPAIGNS_DELETE',\n        'CAMPAIGNS_UPDATE',\n        // CRUD on keywords\n        'KEYWORD_READ',\n        'KEYWORD_CREATE',\n        'KEYWORD_DELETE',\n        'KEYWORD_UPDATE',\n        // CRUD on message flows\n        'FLOWS_READ', \n        'FLOWS_CREATE',\n        'FLOWS_DELETE',\n        'FLOWS_UPDATE',\n        // CRUD on tags\n        'TAGS_READ',\n        'TAGS_CREATE',\n        'TAGS_DELETE',\n        //Service Auth\n        //CRUD on users\n        'USER_READ_ALL',\n        'USER_CREATE',\n        'USER_UPDATE_ASSIGNED',\n        'USER_UPDATE_ALL',\n        'USER_DELETE',\n        //CRUD on teams\n        'TEAM_READ_ALL',\n        'TEAM_CREATE',\n        'TEAM_UPDATE_ASSIGNED',\n        'TEAM_UPDATE_ALL',\n        'TEAM_DELETE',\n        'TEAM_SWITCH_ASSIGNED',\n        'TEAM_SWITCH_ALL',\n        //CRUD on teams Link\n        'TEAM_LINK_READ_ASSIGNED',\n        'TEAM_LINK_READ_ALL',\n        'TEAM_LINK_UPDATE_ASSIGNED',\n        'TEAM_LINK_UPDATE_ALL',\n        'TEAM_LINK_CREATE',\n        'TEAM_LINK_JOIN',\n        //CRUD on members\n        'MEMBER_READ_ASSIGNED',\n        'MEMBER_READ_ALL',\n        'MEMBER_CREATE_ASSIGNED',\n        'MEMBER_CREATE_ALL',\n        'MEMBER_UPDATE_ASSIGNED',\n        'MEMBER_UPDATE_ALL',\n        'MEMBER_DELETE_ASSIGNED',\n        'MEMBER_DELETE_ALL',\n        //CRUD on Tokens\n        'TOKEN_READ_ALL',\n        'TOKEN_CREATE',\n        'TOKEN_DELETE_ASSIGNED',\n        'TOKEN_DELETE_ALL',\n        'TEAM_NOTIFY',\n        'WA_HOOK',\n        'ADMIN_PANEL_LOGIN'\n    ],\n    allAccessList: {\n        'WA_STATE': 'Allow to Open/Close/Logout Whatsapp', // open, close, logout\n        'WA_NEW_MESSAGE_ASSIGNED': 'Allow to Send a new message to Assigned Conversations', // send a new message to assigned conversations\n        // CRUD on contacts\n        'CONTACTS_READ_ASSIGNED': 'Allow to Read Assigned Contacts',\n        'CONTACTS_READ_ALL': 'Allow to Read All Contacts',\n        'CONTACTS_CREATE': 'Allow to Create Contacts',\n        'CONTACTS_DELETE': 'Allow to Delete Contacts',\n        'CONTACTS_UPDATE': 'Allow to Update Contacts',\n        // CRUD on campaigns\n        'CAMPAIGNS_READ': 'Allow to Read Campaigns',\n        'CAMPAIGNS_CREATE': 'Allow to Create Campaigns',\n        'CAMPAIGNS_DELETE': 'Allow to Delete Campaigns',\n        'CAMPAIGNS_UPDATE': 'Allow to Update Campaigns',\n        // CRUD on keywords\n        'KEYWORD_READ': 'Allow to Read Keyword Reply',\n        'KEYWORD_CREATE': 'Allow to Create Keyword Reply',\n        'KEYWORD_DELETE': 'Allow to Delete Keyword Reply',\n        'KEYWORD_UPDATE': 'Allow to Update Keyword Reply',\n        // CRUD on message flows\n        'FLOWS_READ': 'Allow to Read Message Flows', \n        'FLOWS_CREATE': 'Allow to Create Message Flows',\n        'FLOWS_DELETE': 'Allow to Delete Message Flows',\n        'FLOWS_UPDATE': 'Allow to Update Message Flows',\n        // CRUD on tags\n        'TAGS_READ': 'Allow to Read Tags',\n        'TAGS_CREATE': 'Allow to Read Tags',\n        'TAGS_DELETE': 'Allow to Delete Tags',\n        //Service Auth\n        //CRUD on users\n        'USER_READ_ALL': 'Allow to Read All Users',\n        'USER_CREATE': 'Allow to Create User',\n        'USER_UPDATE_ASSIGNED': 'Allow to Update Profile Details',\n        'USER_UPDATE_ALL': 'Allow to Update All Users',\n        'USER_DELETE': 'Allow to Delete User',\n        //CRUD on teams\n        'TEAM_READ_ALL': 'Allow to Read All Teams',\n        'TEAM_CREATE': 'Allow to Create Team',\n        'TEAM_UPDATE_ALL': 'Allow to Update All Team',\n        'TEAM_DELETE': 'Allow to Delete Team',\n        'TEAM_SWITCH_ALL': 'Allow to Switch All Team Members',\n        //CRUD on teams Link\n        'TEAM_LINK_READ_ALL': 'Allow to Read All Team Link',\n        'TEAM_LINK_UPDATE_ALL': 'Allow to Update All Team Link',\n        'TEAM_LINK_CREATE': 'Allow to Create Team Link',\n        'TEAM_LINK_JOIN': 'Allow to Join to Other Team',\n        //CRUD on members\n        'MEMBER_READ_ALL': 'Allow to Read All Team Members',\n        'MEMBER_CREATE_ALL': 'Allow to Create Team Member to All Teams',\n        'MEMBER_UPDATE_ALL': 'Allow to Update Team Member to All Teams',\n        'MEMBER_DELETE_ALL': 'Allow to Delete Team Member to All Teams',\n        //CRUD on Tokens\n        'TOKEN_READ_ALL': 'Allow to Read All Tokens',\n        'TOKEN_CREATE': 'Allow to Create Token',\n        'TOKEN_DELETE_ASSIGNED': 'Allow to Delete Assigned Tokens',\n        'TOKEN_DELETE_ALL': 'Allow to Delete All Tokens',\n        'TEAM_NOTIFY': 'Allow to Notify Team',\n        'WA_HOOK': 'Allow to Send Notification via Whatsapp Hook',\n        'ADMIN_PANEL_LOGIN': 'Allow to Login to Admin Panel',\n        'TEAM_UPDATE_ASSIGNED': 'Allow to Update Team Details',\n        'TEAM_SWITCH_ASSIGNED': 'Allow to Switch to Other Teams',\n        'TEAM_LINK_READ_ASSIGNED': 'Allow to Read Team Link',\n        'TEAM_LINK_UPDATE_ASSIGNED': 'Allow to Update Team Link',\n        'MEMBER_READ_ASSIGNED': 'Allow to Read Team Members',\n        'MEMBER_CREATE_ASSIGNED': 'Allow to Add Team Member',\n        'MEMBER_UPDATE_ASSIGNED': 'Allow to Update Team Member',\n        'MEMBER_DELETE_ASSIGNED': 'Allow to Delete Team Member'\n    },\n    allAccessListChoices: [\n        { id: 'WA_STATE', name: 'Allow to Open/Close/Logout Whatsapp'}, // open, close, logout\n        { id: 'WA_NEW_MESSAGE_ASSIGNED', name: 'Allow to Send a new message to Assigned Conversations'}, // send a new message to assigned conversations\n        { id: 'CONTACTS_READ_ASSIGNED', name: 'Allow to Read Assigned Contacts'},\n        { id: 'CONTACTS_READ_ALL', name: 'Allow to Read All Contacts'},\n        { id: 'CONTACTS_CREATE', name: 'Allow to Create Contacts'},\n        { id: 'CONTACTS_DELETE', name: 'Allow to Delete Contacts'},\n        { id: 'CONTACTS_UPDATE', name: 'Allow to Update Contacts'},\n        { id: 'CAMPAIGNS_READ', name: 'Allow to Read Campaigns'},\n        { id: 'CAMPAIGNS_CREATE', name: 'Allow to Create Campaigns'},\n        { id: 'CAMPAIGNS_DELETE', name: 'Allow to Delete Campaigns'},\n        { id: 'CAMPAIGNS_UPDATE', name: 'Allow to Update Campaigns'},\n        { id: 'KEYWORD_READ', name: 'Allow to Read Keyword Reply'},\n        { id: 'KEYWORD_CREATE', name: 'Allow to Create Keyword Reply'},\n        { id: 'KEYWORD_DELETE', name: 'Allow to Delete Keyword Reply'},\n        { id: 'KEYWORD_UPDATE', name: 'Allow to Update Keyword Reply'},\n        { id: 'FLOWS_READ', name: 'Allow to Read Message Flows'}, \n        { id: 'FLOWS_CREATE', name: 'Allow to Create Message Flows'},\n        { id: 'FLOWS_DELETE', name: 'Allow to Delete Message Flows'},\n        { id: 'FLOWS_UPDATE', name: 'Allow to Update Message Flows'},\n        { id: 'TAGS_READ', name: 'Allow to Read Tags'},\n        { id: 'TAGS_CREATE', name: 'Allow to Read Tags'},\n        { id: 'TAGS_DELETE', name: 'Allow to Delete Tags'},\n        { id: 'USER_READ_ALL', name: 'Allow to Read All Users'},\n        { id: 'USER_CREATE', name: 'Allow to Create User'},\n        { id: 'USER_UPDATE_ASSIGNED', name: 'Allow to Update Profile Details'},\n        { id: 'USER_UPDATE_ALL', name: 'Allow to Update All Users'},\n        { id: 'USER_DELETE', name: 'Allow to Delete User'},\n        { id: 'TEAM_READ_ALL', name: 'Allow to Read All Teams'},\n        { id: 'TEAM_CREATE', name: 'Allow to Create Team'},\n        { id: 'TEAM_UPDATE_ALL', name: 'Allow to Update All Team'},\n        { id: 'TEAM_DELETE', name: 'Allow to Delete Team'},\n        { id: 'TEAM_SWITCH_ALL', name: 'Allow to Switch All Team Members'},\n        { id: 'TEAM_LINK_READ_ALL', name: 'Allow to Read All Team Link'},\n        { id: 'TEAM_LINK_UPDATE_ALL', name: 'Allow to Update All Team Link'},\n        { id: 'TEAM_LINK_CREATE', name: 'Allow to Create Team Link'},\n        { id: 'TEAM_LINK_JOIN', name: 'Allow to Join to Other Team'},\n        { id: 'MEMBER_READ_ALL', name: 'Allow to Read All Team Members'},\n        { id: 'MEMBER_CREATE_ALL', name: 'Allow to Create Team Member to All Teams'},\n        { id: 'MEMBER_UPDATE_ALL', name: 'Allow to Update Team Member to All Teams'},\n        { id: 'MEMBER_DELETE_ALL', name: 'Allow to Delete Team Member to All Teams'},\n        { id: 'TOKEN_READ_ALL', name: 'Allow to Read All Tokens'},\n        { id: 'TOKEN_CREATE', name: 'Allow to Create Token'},\n        { id: 'TOKEN_DELETE_ASSIGNED', name: 'Allow to Delete Assigned Tokens'},\n        { id: 'TOKEN_DELETE_ALL', name: 'Allow to Delete All Tokens'},\n        { id: 'TEAM_NOTIFY', name: 'Allow to Notify Team'},\n        { id: 'WA_HOOK', name: 'Allow to Send Notification via Whatsapp Hook'},\n        { id: 'ADMIN_PANEL_LOGIN', name: 'Allow to Login to Admin Panel'},\n        { id: 'TEAM_UPDATE_ASSIGNED', name: 'Allow to Update Team Details' },\n        { id: 'TEAM_SWITCH_ASSIGNED', name: 'Allow to Switch to Other Teams' },\n        { id: 'TEAM_LINK_READ_ASSIGNED', name: 'Allow to Read Team Link' },\n        { id: 'TEAM_LINK_UPDATE_ASSIGNED', name: 'Allow to Update Team Link' },\n        { id: 'MEMBER_READ_ASSIGNED', name: 'Allow to Read Team Members' },\n        { id: 'MEMBER_CREATE_ASSIGNED', name: 'Allow to Add Team Member' },\n        { id: 'MEMBER_UPDATE_ASSIGNED', name: 'Allow to Update Team Member' },\n        { id: 'MEMBER_DELETE_ASSIGNED', name: 'Allow to Delete Team Member' },\n    ],\n}","import React from 'react';\nimport { \n    Edit,\n    TextInput, \n    SimpleForm, \n    required, \n    PasswordInput, \n    TextField, \n    FunctionField,\n    SaveButton,\n    Toolbar\n} from 'react-admin';\nimport constants from '../utilities/constants';\n\nconst ProfileEditToolbar = props => (\n    <Toolbar {...props} >\n        <SaveButton\n            submitOnEnter={false}\n        />\n    </Toolbar>\n);\n\nexport const ProfileEdit = props => {\n    const transform = data => {\n        var newData = {};\n        newData.username = data.username;\n        if (data.password) {\n            newData.password = data.password;\n        }\n        newData.emailAddress = data.emailAddress;\n        newData.contactNumber = data.contactNumber;\n        \n        return newData;\n    }\n    \n    return (\n        <Edit\n            id={localStorage.getItem('id')}\n            resource=\"profile\"\n            basePath=\"/profile\"\n            redirect={false}\n            title=\"Profile\"\n            hasEdit={true}\n            hasDelete={false}\n            {...props}\n            transform={transform}\n        >\n            <SimpleForm toolbar={<ProfileEditToolbar />}>\n                <TextInput fullWidth source=\"username\" validate={required()} />\n                <PasswordInput fullWidth source=\"password\" />\n                <TextInput fullWidth source=\"emailAddress\" />\n                <TextInput fullWidth source=\"contactNumber\" />\n                <TextField source=\"created\" label=\"Created\" />\n                <TextField source=\"modified\" label=\"Modified\" />\n                <FunctionField label=\"Status\" render={record => record ? constants.statusList[record['status']] : 'N/A'} />\n            </SimpleForm>\n        </Edit>\n    );\n};","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { ProfileEdit } from '../modules/Profile';\n\nexport default [\n    <Route\n        key=\"profile\"\n        path=\"/profile\"\n        component={ProfileEdit}\n    />,\n]","import jwt from 'jsonwebtoken';\nimport constants from './constants';\n\nconst token = {\n    verify: meta => {\n        //call the public key\n        const request = new Request(`${constants.base_url}/public/public.pem`, {\n            method: 'GET',\n        });\n\n        return fetch(request)\n        .then( response => {\n            if (response.status < 200 || response.status >= 300) {\n                throw new Error(response.statusText);\n            }\n            return response;\n        })\n        .then( async (response) => {\n            const data = await jwt.verify(meta.accessToken, await response.text());\n\n            const scope = data.scope;\n\n            const indexAdmin = constants.getScopeList.indexOf('ADMIN_PANEL_LOGIN');\n\n            if (scope.length > indexAdmin && scope[indexAdmin] === '1') {\n                return data;\n            }\n\n            return false;\n        });\n    }\n}\n\nexport default token;","import constants from '../utilities/constants';\nimport token from '../utilities/token';\n\nconst authProvider = {\n    login: (params) => {\n        //params should be username and password\n        const request = new Request(`${constants.base_url}/oauth/token`, {\n            method: 'POST',\n            body: JSON.stringify(params),\n            headers: new Headers({\n                'Content-Type': constants.contentTypeJSON\n            })\n        });\n\n        return fetch(request)\n        .then( response => {\n            if (response.status < 200 || response.status >= 300) {\n                throw new Error(response.statusText);\n            }\n            return response.json();\n        })\n        .then( async (meta) => {\n            console.log(meta);\n            const data = await token.verify(meta);\n            if (!data) {\n                throw new Error(\"The role is not allowed to access the portal.\")\n            }\n\n            localStorage.setItem('accessToken', meta.accessToken);\n            localStorage.setItem('accessTokenExpiration', meta.accessTokenExpiration);\n            localStorage.setItem('refreshToken', meta.refreshToken);\n            localStorage.setItem('refreshTokenExpiration', meta.refreshTokenExpiration);\n\n            return Promise.resolve();\n        });\n    },\n    logout: (params) => {\n        //params should be username and password\n\n        if(localStorage.refreshToken) {\n            const request = new Request(`${constants.base_url}/oauth/revoke`, {\n                method: 'POST',\n                body: JSON.stringify({refresh_token: localStorage.refreshToken}),\n                headers: new Headers({\n                    'Content-Type': constants.contentTypeJSON\n                })\n            });\n    \n            fetch(request)\n            .then( response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then( async (meta) => {\n                return Promise.resolve();\n            });\n        }\n        localStorage.removeItem('id');\n        localStorage.removeItem('role');\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('accessTokenExpiration');\n        localStorage.removeItem('refreshToken');\n        localStorage.removeItem('refreshTokenExpiration');\n        return Promise.resolve();\n    },\n    checkAuth: (params) => {\n        return localStorage.getItem('accessToken') ? Promise.resolve() : Promise.reject();\n    },\n    checkError: (error) => {\n        \n        if (error.status === 401) {\n            if (!localStorage.getItem('refreshToken')) {\n                return Promise.reject();\n            } else {\n                //request for a new access token using refresh token\n                const request = new Request(`${constants.base_url}/oauth/token`, {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        refresh_token: localStorage.refreshToken,\n                        grant_type: constants.grantTypes.user_refresh_token\n                    }),\n                    headers: new Headers({\n                        'Content-Type': constants.contentTypeJSON\n                    })\n                });\n        \n                return fetch(request)\n                .then( response => {\n                    if (response.status < 200 || response.status >= 300) {\n                        throw new Error(response.statusText);\n                    }\n                    return response.json();\n                })\n                .then( (meta) => {\n                    localStorage.setItem('accessToken', meta.accessToken);\n                    localStorage.setItem('accessTokenExpiration', meta.accessTokenExpiration);\n                    localStorage.setItem('refreshToken', meta.refreshToken);\n                    localStorage.setItem('refreshTokenExpiration', meta.refreshTokenExpiration);\n        \n                    return Promise.resolve();\n                });\n            }\n\n            \n        }\n        \n        return Promise.resolve();\n    },\n    getPermissions: (params) => {\n        return Promise.resolve();\n    }\n}\n\nexport default authProvider;","import { fetchUtils } from 'react-admin';\nimport constants from './constants';\n\nexport default (url, options = {}) => {\n    if (!options.headers) {\n        options.headers = new Headers({ Accept: constants.contentTypeJSON, Authorization: `Bearer ${localStorage.accessToken}` });\n    } else {\n        options.headers.append('Accept', constants.contentTypeJSON);\n        options.headers.append('Authorization', `Bearer ${localStorage.accessToken}`);\n    }\n\n    return fetchUtils.fetchJson(url, options);\n};","import constants from './constants';\nimport httpClient from './httpClient';\n\nexport const checkAuth = () => {\n    //expire 30 seconds before expiration time\n    if (localStorage.accessTokenExpiration < new Date().getTime() + 5000) {\n        //request new access token\n\n        //check if the refresh token is still valid\n        if (localStorage.refreshTokenExpiration > new Date().getTime() + 5000) {\n            //request for new token\n            return httpClient(`${constants.base_url}/oauth/token`, {\n                method: 'POST',\n                body: JSON.stringify({\n                    refresh_token: localStorage.refreshToken,\n                    grant_type: constants.grantTypes.user_refresh_token\n                })\n            })\n            .then(\n                ( { json } ) => {\n                    console.log(json);\n                    localStorage.setItem('accessToken', json.accessToken);\n                    localStorage.setItem('accessTokenExpiration', json.accessTokenExpiration);\n                    localStorage.setItem('refreshToken', json.refreshToken);\n                    localStorage.setItem('refreshTokenExpiration', json.refreshTokenExpiration);\n                }\n            );\n        }\n    }\n};","import { stringify } from 'query-string';\nimport constants from '../utilities/constants';\nimport { checkAuth } from '../utilities/services';\nimport httpClient from '../utilities/httpClient';\n\nconst apiUrl = `${constants.base_url}`;\n\nexport default {\n    getList: (resource, params) => {\n        checkAuth();\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        const query = {\n            limit: page * perPage,\n            offset: (page * perPage) - perPage,\n            q: params.filter.q,\n            id: params.filter.id,\n            //for users endpoint only\n            all: true,\n            //for teams endpoint only\n            request_type: 'admin',\n            condition: 'or'\n        }\n        const url = `${apiUrl}/${resource}?${stringify(query)}`;\n        return httpClient(url)\n        .then( \n            ( { headers, json }) => \n            {\n                return {\n                    data: json.meta,\n                    total: !headers.get('Content-Range') ? perPage : parseInt(headers.get('Content-Range').split('/').pop(), 10),\n                }\n            }\n        );\n    },\n\n    getOne: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}/${resource}?id=${params.id}`).then(({ json }) => ({\n            data: json.meta,\n            total: 1\n        }));\n    },\n    getMany: (resource, params) => {\n        checkAuth();\n        const url = `${apiUrl}/${resource}`;\n        return httpClient(url).then(({ json }) => ({ data: json.meta }));\n    },\n\n    getManyReference: (resource, params) => {\n        checkAuth();\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        const query = {\n            limit: page * perPage,\n            offset: ( (page * perPage) / perPage ) - 1\n        }\n        const url = `${apiUrl}/${resource}?${stringify(query)}`;\n\n        return httpClient(url).then(({ headers, json }) => ({\n            data: json.meta,\n            total: !headers.get('Content-Range') ? perPage : parseInt(headers.get('Content-Range').split('/').pop(), 10),\n        }));\n    },\n    update: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}/${resource}`, {\n            method: 'PATCH',\n            body: JSON.stringify(params.data),\n        }).then(({ json }) => ({ data: json }))\n    },\n    updateMany: (resource, params) => {\n        checkAuth();\n        const query = {\n            filter: JSON.stringify({ id: params.ids}),\n        };\n        return httpClient(`${apiUrl}/${resource}?${stringify(query)}`, {\n            method: 'PATCH',\n            body: JSON.stringify(params.data),\n        }).then(({ json }) => ({ data: json }));\n    },\n\n    create: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}/${resource}`, {\n            method: 'POST',\n            body: JSON.stringify(params.data),\n        }).then(({ json }) => ({\n            data: json.meta,\n        }));\n    },\n    delete: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}/${resource}?id=${params.id}`, {\n            method: 'DELETE',\n        }).then(({ json }) => ({ data: json }));\n    },\n    deleteMany: (resource, params) => {\n        checkAuth();\n        const query = {\n            filter: JSON.stringify({ id: params.ids}),\n        };\n        return httpClient(`${apiUrl}/${resource}?${stringify(query)}`, {\n            method: 'DELETE',\n            body: JSON.stringify(params.data),\n        }).then(({ json }) => ({ data: json }));\n    }\n};\n","import constants from '../utilities/constants';\nimport { checkAuth } from '../utilities/services';\nimport httpClient from '../utilities/httpClient';\n\nconst apiUrl = `${constants.base_url}/users`;\n\nexport default {\n    getOne: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}`)\n        .then( \n            ( {json} ) => {\n                //set id to the local storage\n                localStorage.setItem('id', json.meta.id);\n                return {\n                    data: json.meta\n                }\n            }\n        );\n    },\n    update: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}`, {\n            method: 'PATCH',\n            body: JSON.stringify(params.data),\n        }).then(({ json }) => ({ data: json }))\n    }\n};\n","\nimport constants from '../utilities/constants';\nimport { checkAuth } from '../utilities/services';\nimport httpClient from '../utilities/httpClient';\n\nconst apiUrl = `${constants.base_url}`;\n\nexport default {\n    getManyReference: (resource, params) => {\n        checkAuth();\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        const query = {\n            limit: page * perPage,\n            offset: ( (page * perPage) / perPage ) - 1\n        }\n        const url = `${apiUrl}/${resource}?team_id=${params.id}`;\n\n        return httpClient(url).then(({ headers, json }) => ({\n            data: json.meta,\n            total: !headers.get('Content-Range') ? perPage : parseInt(headers.get('Content-Range').split('/').pop(), 10),\n        }));\n    },\n    update: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}/${resource}`, {\n            method: 'PATCH',\n            body: JSON.stringify(params.data),\n        }).then(({ json }) => ({\n            data: json,\n        }))\n    },\n    delete: (resource, params) => {\n        checkAuth();\n        console.log(params)\n        return httpClient(`${apiUrl}/${resource}?team_id=${params.previousData.teamId}&user_id=${params.previousData.userId}`, {\n            method: 'DELETE',\n        }).then(({ json }) => ({ data: json }));\n    },\n        \n};\n","import constants from '../utilities/constants';\nimport { checkAuth } from '../utilities/services';\nimport httpClient from '../utilities/httpClient';\n\nconst apiUrl = `${constants.base_url}`;\n\nexport default {\n    getManyReference: (resource, params) => {\n        checkAuth();\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        const query = {\n            limit: page * perPage,\n            offset: ( (page * perPage) / perPage ) - 1\n        }\n        const url = `${apiUrl}/${resource}?all=true&user_id=${params.id}`;\n\n        return httpClient(url).then(({ headers, json }) => ({\n            data: json.meta,\n            total: !headers.get('Content-Range') ? perPage : parseInt(headers.get('Content-Range').split('/').pop(), 10),\n        }));\n    },\n    create: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}/${resource}?user_id=${params.data.user_id}`, {\n            method: 'POST',\n            body: JSON.stringify({ user_id: params.data.user_id, expiration: params.data.expiration }),\n        }).then(({ json }) => ({\n            data: json,\n        }))\n    },\n    update: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}/${params.id}/${resource}`, {\n            method: 'POST',\n            body: JSON.stringify(params.data),\n        }).then(({ json }) => ({\n            data: json,\n        }))\n    },\n    delete: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}/oauth/revoke`, {\n            method: 'POST',\n            body: JSON.stringify({refresh_token: params.previousData.token}),\n        }).then(({ json }) => ({ data: json }));\n    },\n    deleteMany: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}/oauth/revoke/all?user_id=${params.ids[0]}`, {\n            method: 'DELETE',\n        }).then(({ json }) => ({ data: json }));\n    },\n    revokeAll: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}/oauth/revoke/all?user_id=all`, {\n            method: 'DELETE',\n        }).then(({ json }) => ({ data: json }));\n    },\n        \n};\n","import constants from '../utilities/constants';\nimport { checkAuth } from '../utilities/services';\nimport httpClient from '../utilities/httpClient';\n\nconst apiUrl = `${constants.base_url}/oauth`;\n\nexport default {\n    tokenGrant: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}/token`, {\n            method: 'POST',\n            body: JSON.stringify(params),\n        }).then(({ json }) => ({\n            data: json,\n        }));\n    },\n};\n","import constants from '../utilities/constants';\nimport { checkAuth } from '../utilities/services';\nimport httpClient from '../utilities/httpClient';\n\nconst apiUrl = `${constants.base_url}`;\n\nexport default {\n    getManyReference: (resource, params) => {\n        checkAuth();\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        const query = {\n            limit: page * perPage,\n            offset: ( (page * perPage) / perPage ) - 1\n        }\n        const url = `${apiUrl}/teams?user_id=${params.id}`;\n\n        return httpClient(url).then(({ headers, json }) => ({\n            data: json.meta,\n            total: !headers.get('Content-Range') ? perPage : parseInt(headers.get('Content-Range').split('/').pop(), 10),\n        }));\n    },\n    delete: (resource, params) => {\n        checkAuth();\n        console.log(params);\n        return httpClient(`${apiUrl}/members?user_id=${params.previousData.userId}&team_id=${params.previousData.teamId}`, {\n            method: 'DELETE',\n        }).then(({ json }) => ({ data: json }));\n    },\n    switchDefault: (resource, params) => {\n        checkAuth();\n        return httpClient(`${apiUrl}/teams/switch`, {\n            method: 'POST',\n            body: JSON.stringify({id: params.teamId, user_id: params.userId}),\n        }).then(({ json }) => ({\n            data: json,\n        }))\n    },\n        \n};\n","import adminDataProvider from './adminDataProvider';\nimport profileDataProvider from './profileDataProvider';\nimport teamMemberDataProvider from './teamMemberDataProvider';\nimport userTokenDataProvider from './userTokenDataProvider';\nimport oauthDataProvider from './oauthProvider';\nimport userMembershipDataProvider from './userMembershipDataProvider';\n\nimport { \n    GET_LIST, \n    GET_ONE, \n    GET_MANY_REFERENCE, \n    GET_MANY, UPDATE, \n    UPDATE_MANY, \n    CREATE, \n    DELETE, \n    DELETE_MANY \n} from 'react-admin';\n\nconst dataProviders = {\n    'profile': {\n        dataProvider: profileDataProvider\n    },\n    'users': {\n        dataProvider: adminDataProvider\n    },\n    'teams': {\n        dataProvider: adminDataProvider\n    },\n    'members': {\n        dataProvider: teamMemberDataProvider\n    },\n    'tokens': {\n        dataProvider: userTokenDataProvider\n    },\n    'oauth': {\n        dataProvider: oauthDataProvider\n    },\n    'memberships': {\n        dataProvider: userMembershipDataProvider\n    },\n}\n\nexport default (type, resource, params) => {\n    var dataProviderMapping;\n\n    try {\n        dataProviderMapping = dataProviders[resource].dataProvider;\n    } catch (e) {\n        throw new Error('resource is not yet registered in the data provider');\n    }\n\n    switch(type) {\n        case GET_LIST:\n            return dataProviderMapping.getList(resource, params);\n        case GET_ONE:\n            return dataProviderMapping.getOne(resource, params);\n        case GET_MANY_REFERENCE:\n            return dataProviderMapping.getManyReference(resource, params);\n        case GET_MANY:\n            return dataProviderMapping.getMany(resource, params);\n        case UPDATE:\n            return dataProviderMapping.update(resource, params);\n        case UPDATE_MANY:\n            return dataProviderMapping.updateMany(resource, params);   \n        case CREATE:\n            return dataProviderMapping.create(resource, params);\n        case DELETE:\n            return dataProviderMapping.delete(resource, params);\n        case DELETE_MANY:\n            return dataProviderMapping.deleteMany(resource, params);   \n        case 'revokeAll':\n            return dataProviderMapping.revokeAll(resource, params);  \n        case 'tokenGrant':\n            return dataProviderMapping.tokenGrant(resource, params); \n        case 'switchDefault':\n            return dataProviderMapping.switchDefault(resource, params); \n        default:\n            return {\n                data: [],\n                total: 0,\n            }\n    }\n};","import * as React from \"react\";\nimport {\n    makeStyles,\n    Card,\n    Typography,\n    CardMedia\n} from '@material-ui/core';\nimport { Title } from 'react-admin';\n\nconst useStyles = makeStyles((theme) => ({\n    image: {\n      width: 180,\n      height: 180,\n      marginRight: 'auto',\n      marginLeft: 'auto'\n    }\n  }));\n\nexport default () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <Title title=\"Not Found\" />\n            <CardMedia\n                className={classes.image}\n                title=\"xman Logo\"\n                image=\"/icon-2.png\"\n                media=\"img\"\n            />\n            <br>\n            </br>\n            <Typography\n                variant=\"h4\"\n                color=\"textSecondary\"\n                align=\"center\"\n            >\n                404: The page you are looking for isn't here.\n            </Typography>\n        </Card>\n    )\n};","import * as React from \"react\";\nimport {\n    Card,\n    Typography,\n} from '@material-ui/core';\nimport { Title } from 'react-admin';\n\nexport default () => {\n    return (\n        <Card>\n            <Title title=\"Dashboard\" />\n            <Typography\n                variant=\"h4\"\n                color=\"textSecondary\"\n                align=\"center\"\n            >\n                Welcome to xman Admin Auth Dashboard!\n            </Typography>\n        </Card>\n    )\n};","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%',\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;","import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Container,\n  TextField,\n  Typography,\n  makeStyles,\n  CardMedia\n} from '@material-ui/core';\nimport { useLogin, useNotify, Notification, useRedirect } from 'react-admin';\n\nimport Page from '../components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.light,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  image: {\n    width: 120,\n    height: 120,\n    marginRight: 'auto',\n    marginLeft: 'auto',\n  },\n  inputTextColor: {\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  const login = useLogin();\n  const notify = useNotify();\n  const redirect = useRedirect();\n  \n  if (localStorage.getItem('accessToken')) {\n    redirect('/');\n  }\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = e => {\n        e.preventDefault();\n        login( {username, password} )\n        .then( res => {\n            notify(\"Successful Login.\");\n        })\n        .catch( err => {\n            notify(\"Invalid Username and Password.\");\n        });\n    };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Login\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <CardMedia\n            className={classes.image}\n            title=\"xman Logo\"\n            image=\"/icon-2.png\"\n            media=\"img\"\n          />\n          <Box mb={3}>\n            <Typography\n              color=\"primary\"\n              variant=\"h2\"\n              align=\"center\"\n            >\n              Admin Login\n            </Typography>\n          </Box>\n          <form \n            onSubmit={handleSubmit}\n          >\n              <TextField\n                    fullWidth\n                    label=\"Username\"\n                    margin=\"normal\"\n                    name=\"username\"\n                    onChange={e => setUsername(e.target.value)}\n                    type=\"text\"\n                    value={username}\n                    variant=\"outlined\"\n                    InputProps={{ className: classes.inputTextColor }}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Password\"\n                    margin=\"normal\"\n                    name=\"password\"\n                    onChange={e => setPassword(e.target.value)}\n                    type=\"password\"\n                    value={password}\n                    variant=\"outlined\"\n                    InputProps={{ className: classes.inputTextColor }}\n                  />\n                  <Box my={2}>\n                    <Button\n                      color=\"primary\"\n                      fullWidth\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      Login\n                  </Button>\n                  </Box>\n          </form>\n          <Notification\n            autoHideDuration={3000}\n          />\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default Login;","import React from 'react';\nimport { makeStyles, ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from '../../components/GlobalStyles';\n\nimport theme from '../../theme';\nimport Login from '../../components/Login';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst LoginLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n        <GlobalStyles />\n      \n        <div className={classes.root}>\n            <div className={classes.contentContainer}>\n                <div className={classes.content}>\n                    <Login />\n                </div>\n            </div>\n        </div>\n    </ThemeProvider>\n  );\n};\n\nexport default LoginLayout;","import generator from 'generate-password';\n\nconst generatePassword = (length) => {\n    return generator.generate(\n        {\n            length: length,\n            numbers: true,\n            uppercase: true,\n            lowercase: true,\n            // symbols: false,\n            strict: true,\n            // exclude: '<>%\\\\/:;\"{}\\'[]'\n        }\n    )\n}\n\nexport default generatePassword;","import * as React from \"react\";\nimport { useState, useCallback } from \"react\";\nimport { \n    Create,\n    List, \n    Show,\n    Edit,\n    Datagrid, \n    TextField, \n    SimpleForm, \n    TextInput, \n    SearchInput,\n    SelectInput,\n    PasswordInput, \n    FunctionField,\n    useNotify,\n    useRefresh,\n    useRedirect,\n    required,\n    Filter,\n    ShowButton,\n    TabbedShowLayout,\n    Tab,\n    ReferenceManyField,\n    useDeleteMany,\n    useListContext,\n    TopToolbar,\n    CreateButton,\n    ExportButton,\n    sanitizeListRestProps,\n    useDataProvider,\n    NumberInput,\n    SelectArrayInput,\n    Toolbar,\n    SaveButton,\n    useCreate,\n    BooleanField,\n    DeleteWithConfirmButton,\n    BooleanInput\n} from 'react-admin';\nimport {useForm} from 'react-final-form';\nimport copy from \"copy-to-clipboard\";\nimport {\n    Input,\n    Typography,\n    Slider,\n    Grid,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Chip\n} from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\nimport { \n    makeStyles \n} from '@material-ui/core/styles';\nimport constants from '../utilities/constants';\nimport generatePassword from '../utilities/password'\n\nconst useStyles = makeStyles(() => ({\n    revokeAllButton: {\n        color: 'red',\n        float: 'right',\n        margin: '8px'\n    },\n    revokeAllTopBar: {\n        color: 'red',\n    },\n}));\n\nconst UserFilter = (props) => {\n    return ( \n        <Filter {...props}>\n\n            <SearchInput \n                fullWidth\n                source=\"q\" \n                alwaysOn \n                variant=\"outlined\"\n            />\n        </Filter>\n    );\n};\n\nconst ListActions = (props) => {\n    const classes = useStyles();\n    const {\n        className,\n        exporter,\n        filters,\n        maxResults,\n        ...rest\n    } = props;\n    const {\n        currentSort,\n        resource,\n        filterValues,\n        basePath,\n        total,\n    } = useListContext();\n\n\n    \n    const notify = useNotify();\n    const redirect = useRedirect();\n    const [loading, setLoading] = useState(false);\n\n    const dataProvider = useDataProvider();\n\n    const [open, setOpen] = useState(false);\n\n    const revoke = () => dataProvider\n    .revokeAll('tokens', {})\n    .then( response => {\n        redirect('/users');\n        notify('Successfully revoked all user tokens');\n        setLoading(false);\n        setOpen(false);\n    })\n    .catch( error => {\n        notify(error.message);\n        setLoading(false);\n    });\n\n    const RevokeAllModal = () => {\n        return (\n            <Dialog\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">Revoke Token Confirmation</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    Are you sure you want to revoke all user tokens?\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={() => setOpen(false)} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={revoke} color=\"primary\" autoFocus>\n                    Confirm\n                </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n    \n    return (\n        <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n            <CreateButton basePath={basePath} />\n            <ExportButton\n                disabled={total === 0}\n                resource={resource}\n                sort={currentSort}\n                filterValues={filterValues}\n                maxResults={maxResults}\n            />\n\n            <RevokeAllModal />\n            <Button\n                onClick={() => setOpen(true)}\n                variant='outlined'\n                startIcon={<DeleteIcon />}\n                className={classes.revokeAllTopBar}\n                disabled={loading}\n            >\n                Revoke All Tokens\n            </Button>\n        </TopToolbar>\n    );\n};\n\nexport const UserList = props => {\n\n    return (\n        <List {...props} actions={<ListActions />} filters={<UserFilter />} perPage={25} title=\"Users List\" bulkActionButtons={false} >\n            <Datagrid>\n                <TextField source=\"id\" />\n                <TextField source=\"created\" />\n                <TextField source=\"modified\" />\n                <TextField source=\"username\" />\n                <TextField source=\"emailAddress\" />\n                <TextField source=\"contactNumber\" />\n                <FunctionField label=\"Status\" render={record => record ? constants.statusList[record['status']] : 'N/A'} />\n                <ShowButton />\n                <DeleteWithConfirmButton />\n            </Datagrid>\n        </List>\n    );\n}\n\nexport const UserEdit = props => {\n\n    const [passwordLength, setPasswordLength] = useState(8)\n\n    const GeneratePasswordButton = props => {\n        const form = useForm();\n\n        const handleGenerate = useCallback(\n            () => {\n                form.change('password', generatePassword(passwordLength));\n            }, []\n        )\n\n        return (\n            <Button\n                onClick={handleGenerate}\n                variant=\"contained\"\n                color=\"primary\"\n                style={\n                    {\n                        width: '100%'\n                    }\n                }\n            >\n                Generate\n            </Button>\n        )\n    }\n\n    const transform = data => {\n        var newData = data;\n        \n        delete newData.created;\n        delete newData.modified;\n        delete newData.deleted;\n        delete newData.team;\n        newData.team_id = newData.teamId;\n        delete newData.teamId;\n\n        if (typeof(newData.status) === 'number') {\n            if (newData.status > -1 && constants.statusList.length > newData.status) {\n                newData.status = constants.statusList[newData.status];\n            }\n        }\n        \n        copy(\n            `account details:\\nusername: ${data.username}\\npassword: ${data.password}\\n`\n        )\n\n        return newData;\n    }\n\n    return (\n        <Edit submitOnEnter={false} transform={transform} {...props} redirect=\"show\">\n            <SimpleForm>\n                <TextInput\n                    fullWidth \n                    source=\"username\" \n                    validate={[required()]} \n                />\n                <PasswordInput\n                    fullWidth \n                    source=\"password\" \n                />\n                <div \n                    style={{flexGrow: 1}}\n                    style={\n                        {\n                            width: '100%'\n                        }\n                    }\n                >\n                    <Typography gutterBottom>\n                        Password Length\n                    </Typography>\n                    <Grid \n                        container \n                        alignItems=\"center\" \n                        spacing={3}\n                    >\n                        <Grid \n                            item \n                            xs={10}\n                            sm={10}\n                            md={9}\n                            lg={10}\n                            xl={10}\n                        >\n                            <Slider\n                                value={passwordLength}\n                                step={1}\n                                min={8}\n                                max={64}\n                                valueLabelDisplay=\"auto\"\n                                onChange={(event, newValue) => setPasswordLength(newValue)}\n                            />\n                        </Grid>\n                        <Grid \n                            item \n                            xs={2}\n                            sm={2}\n                            md={1}\n                            lg={1}\n                            xl={1}\n                        >\n                            <Input \n                                label=\"Password Length\"\n                                value={passwordLength}\n                                type=\"number\"\n                                onChange={evt => setPasswordLength(isNaN(evt.target.value) && 8 || evt.target.value)}\n                                onBlur={evt => setPasswordLength( isNaN(evt.target.value) && 8 || evt.target.value >= 8 && evt.target.value || 8)}\n                                margin=\"dense\"\n                                inputProps={{\n                                    step: 1,\n                                    min: 8,\n                                    max: 64,\n                                    type: 'number',\n                                    'aria-labelledby': 'input-slider',\n                                }}\n                            />\n                        </Grid>\n                        <Grid \n                            item \n                            xs={12}\n                            sm={12}\n                            md={2}\n                            lg={1}\n                            xl={1}\n                        >\n                            <GeneratePasswordButton />\n                        </Grid>\n                    </Grid>\n\n                </div>\n                <SelectInput\n                    fullWidth\n                    source=\"status\"\n                    choices={[\n                        { id: 'inactive', name: 'Inactive' },\n                        { id: 'activated', name: 'Active' },\n                        { id: 'blocked', name: 'Blocked' },\n                        { id: 'deleted', name: 'Deleted' }\n                    ]}\n                    initialValue=\"activated\"\n                    validate={[required()]}\n                    format={record => { return !constants.statusList[record] ?  record : constants.statusList[record]} }\n                />\n\n                <SelectArrayInput\n                    fullWidth\n                    source=\"access\"\n                    label=\"Access\"\n                    choices={constants.userAccessListChoices}\n                    validate={[required()]}\n                />\n                <TextInput \n                    fullWidth\n                    source=\"emailAddress\" \n                />\n                <TextInput \n                    fullWidth\n                    source=\"contactNumber\" \n                />\n            </SimpleForm>\n        </Edit>\n    );\n\n}\n\nexport const UserPost = props => {\n\n    const notify = useNotify();\n    const redirect = useRedirect();\n    const refresh = useRefresh();\n\n    const onSuccess = ({ data }) => {\n        notify(`Successfully created a new user`)\n        redirect('/users');\n        refresh();\n    };\n\n    const [passwordLength, setPasswordLength] = useState(8)\n\n    const GeneratePasswordButton = props => {\n        const form = useForm();\n\n        const handleGenerate = useCallback(\n            () => {\n                form.change('password', generatePassword(passwordLength));\n            }, []\n        )\n\n        return (\n            <Button\n                onClick={handleGenerate}\n                variant=\"contained\"\n                color=\"primary\"\n                style={\n                    {\n                        width: '100%'\n                    }\n                }\n            >\n                Generate\n            </Button>\n        )\n    }\n\n    const transform = data => {\n        copy(\n            `account details:\\nusername: ${data.username}\\npassword: ${data.password}\\n`\n        )\n\n        return data;\n    }\n\n    return (\n        <Create onSuccess={onSuccess} submitOnEnter={false} {...props} transform={transform}>\n            <SimpleForm submitOnEnter={false}>\n                <TextInput \n                    source=\"username\" \n                    validate={[required()]}\n                    fullWidth \n                />\n                <PasswordInput \n                    fullWidth\n                    source=\"password\"\n                    label=\"Password\"\n                    validate={[required()]} \n                />\n                <div \n                    style={{flexGrow: 1}}\n                    style={\n                        {\n                            width: '100%'\n                        }\n                    }\n                >\n                    <Typography gutterBottom>\n                        Password Length\n                    </Typography>\n                    <Grid \n                        container \n                        alignItems=\"center\" \n                        spacing={3}\n                    >\n                        <Grid \n                            item \n                            xs={10}\n                            sm={10}\n                            md={9}\n                            lg={10}\n                            xl={10}\n                        >\n                            <Slider\n                                value={passwordLength}\n                                step={1}\n                                min={8}\n                                max={64}\n                                valueLabelDisplay=\"auto\"\n                                onChange={(event, newValue) => setPasswordLength(newValue)}\n                            />\n                        </Grid>\n                        <Grid \n                            item \n                            xs={2}\n                            sm={2}\n                            md={1}\n                            lg={1}\n                            xl={1}\n                        >\n                            <Input \n                                label=\"Password Length\"\n                                value={passwordLength}\n                                type=\"number\"\n                                onChange={evt => setPasswordLength(isNaN(evt.target.value) && 8 || evt.target.value)}\n                                onBlur={evt => setPasswordLength( isNaN(evt.target.value) && 8 || evt.target.value >= 8 && evt.target.value || 8)}\n                                margin=\"dense\"\n                                inputProps={{\n                                    step: 1,\n                                    min: 8,\n                                    max: 64,\n                                    type: 'number',\n                                    'aria-labelledby': 'input-slider',\n                                }}\n                            />\n                        </Grid>\n                        <Grid \n                            item \n                            xs={12}\n                            sm={12}\n                            md={2}\n                            lg={1}\n                            xl={1}\n                        >\n                            <GeneratePasswordButton />\n                        </Grid>\n                    </Grid>\n\n                </div>\n                \n                <SelectInput\n                    fullWidth\n                    source=\"status\"\n                    choices={[\n                        { id: 'inactive', name: 'Inactive' },\n                        { id: 'activated', name: 'Active' },\n                        { id: 'blocked', name: 'Blocked' },\n                        { id: 'deleted', name: 'Deleted' },\n                    ]}\n                    initialValue=\"activated\"\n                    validate={[required()]}\n                />\n                <SelectArrayInput\n                    fullWidth\n                    source=\"access\"\n                    label=\"Access\"\n                    choices={constants.userAccessListChoices}\n                    initialValue={constants.userAccessDefault}\n                    validate={[required()]}\n                />\n                <TextInput \n                    fullWidth\n                    source=\"emailAddress\" \n                />\n                <TextInput \n                    fullWidth\n                    source=\"contactNumber\" \n                />\n                <BooleanInput \n                    fullWidth\n                    label=\"Send Credentials to Email\" \n                    source=\"isSendCredentialsToEmail\" \n                />\n                <BooleanInput \n                    fullWidth\n                    label=\"Send Credentials to Whatsapp Number\" \n                    source=\"isSendCredentialsToWa\" \n                />\n            </SimpleForm>\n        </Create>\n    );\n\n};\n\nexport const UserShow = props => {\n    const classes = useStyles();\n    const notify = useNotify();\n    const redirect = useRedirect();\n    const refresh = useRefresh();\n\n    const RevokeAllToken = ({record}) => {\n        const [deleteToken, { loading }] = useDeleteMany(\n                'tokens', \n                [record.id],\n                {\n                    onSuccess: (data) => {\n                        notify('Successfully Revoked Tokens');\n                        redirect(`/users/${record.id}/show/1`)\n                        refresh();\n                    },\n                    onError: ({data}) => {\n                        notify(data);\n                    }\n                }\n            );\n\n            const [open, setOpen] = useState(false);\n        \n            const DeleteModal = () => {\n                return (\n                    <Dialog\n                        open={open}\n                        onClose={() => setOpen(false)}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-title\">Revoke Token Confirmation</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Are you sure you want to revoke all tokens of this user?\n                        </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={() => setOpen(false)} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={deleteToken} color=\"primary\" autoFocus>\n                            Confirm\n                        </Button>\n                        </DialogActions>\n                    </Dialog>\n                )\n            }\n\n        return (\n            <>\n                <DeleteModal />\n                <Button startIcon={<DeleteIcon />} onClick={ () => setOpen(true) } disabled={loading} className={classes.revokeAllButton} variant='outlined' >\n                    Revoke All\n                </Button>\n            </>\n        )\n    }\n\n    const [create, { loading }] = useCreate('tokens');\n\n    const TokenCreateToolbar = props => {\n        \n        return (\n            <Toolbar {...props} >\n                <SaveButton disabled={loading}/>\n            </Toolbar>\n        );\n    };\n\n    const handleSubmit = val => {\n        create(\n            {payload: {data: {user_id: val.id, expiration: val.expiration}}},\n            {\n                onSuccess: ({data}) => {\n                    notify(data.message);\n                    redirect(`/users/${val.id}/show/2`)\n                    refresh();\n                },\n                onError: ({data}) => {\n                    notify(data);\n                }\n            }\n        )\n    }\n\n    const MakeDefault = ({record}) => {\n        const dataProvider = useDataProvider();\n\n        const switchDefault = () => dataProvider\n        .switchDefault('memberships', record)\n        .then( response => {\n            redirect(`/users/${record.userId}/show/1`);\n            notify('Successfully switch to default');\n            refresh();\n        })\n        .catch( error => {\n            notify(error.message);\n        });\n\n        if (record && !record.is_default) {\n            return <Button startIcon={<SwapHorizIcon />} onClick={switchDefault} disabled={loading} color=\"primary\" variant='text' >\n                Make Default\n            </Button>;\n        } else {\n            return <></>\n        }\n    }\n\n    const CustomDeleteButton = ({record, ...props}) => {\n\n        return (record && !record.is_original) && (\n            <DeleteWithConfirmButton {...props} record={record} />\n        )\n    }\n\n    const [accesses, setAccesses] = useState(\n        constants.userAccessList\n    )\n\n    const [teamAccess, setTeamAccesses] = useState(\n        constants.teamAccessList\n    )\n\n    return (\n        <Show {...props}>\n            <TabbedShowLayout>\n                <Tab label=\"User Details\">\n                    <TextField source=\"id\" />\n                    <TextField source=\"created\" />\n                    <TextField source=\"modified\" />\n                    <TextField source=\"username\" />\n                    <TextField source=\"emailAddress\" />\n                    <TextField source=\"contactNumber\" />\n                    <FunctionField label=\"Status\" render={record => record ? constants.statusList[record['status']] : 'N/A'} />\n                    <FunctionField \n                        label=\"Access\" \n                        source=\"access\"\n                        render={record => {\n                            return record?.access?.map(\n                                item => {\n                                    return <Chip label={accesses[item]} key={item} />\n                                }\n                            )\n                        }} \n                    />\n                </Tab>\n                <Tab label=\"Memberships\">\n                    <ReferenceManyField reference=\"memberships\" target=\"id\" addLabel={false}>\n                        <Datagrid >\n                            <TextField source=\"id\" />\n                            <TextField source=\"created\" />\n                            <TextField source=\"modified\" />\n                            <TextField label=\"Team ID\" source=\"team.id\" />\n                            <TextField label=\"Team Name\" source=\"team.name\" />\n                            <FunctionField label=\"Team Role\" render={record => record ? constants.teamRoleList[record.role] : 'N/A'} />\n                            <BooleanField source=\"is_default\" />\n                            <BooleanField source=\"is_original\" />\n                            <FunctionField \n                                label=\"Access\" \n                                source=\"access\"\n                                render={record => {\n                                    return record?.access?.map(\n                                        item => {\n                                            return <Chip label={teamAccess[item]} key={item} />\n                                        }\n                                    )\n                                }} \n                            />\n                            <MakeDefault />\n                            <CustomDeleteButton />\n                        </Datagrid>\n                    </ReferenceManyField>\n                </Tab>\n                <Tab label=\"User Tokens\">\n                    <ReferenceManyField reference=\"tokens\" target=\"id\" addLabel={false}>\n                        <Datagrid >\n                            <TextField source=\"id\" />\n                            <TextField source=\"created\" />\n                            <TextField source=\"expiration\" />\n                            <TextField source=\"token\" />\n                            <FunctionField \n                                label=\"Status\" \n                                render={record => record ? constants.statusList[record['status']] : 'N/A'} \n                            />\n                            <DeleteWithConfirmButton />\n                            \n                        </Datagrid>\n                    </ReferenceManyField>\n                    <RevokeAllToken />\n                </Tab>\n                <Tab label=\"Create Token\">\n                    <SimpleForm \n                        resource='tokens'\n                        save={handleSubmit}\n                        toolbar={ <TokenCreateToolbar /> }\n                    >\n                        <NumberInput \n                            fullWidth\n                            source=\"expiration\" \n                        />\n                    </SimpleForm>\n                </Tab>\n            </TabbedShowLayout>\n        </Show>\n    );\n}","import React, { useState } from \"react\";\nimport { \n    Create,\n    List, \n    Show,\n    Edit,\n    Datagrid, \n    TextField, \n    SimpleForm, \n    TextInput, \n    SearchInput,\n    SelectInput,\n    FunctionField,\n    useNotify,\n    useRefresh,\n    useRedirect,\n    required,\n    BooleanField,\n    BooleanInput,\n    ShowButton,\n    Filter,\n    Toolbar,\n    TabbedShowLayout,\n    Tab,\n    ReferenceManyField,\n    SaveButton,\n    useUpdate,\n    NumberInput,\n    useDataProvider,\n    DeleteWithConfirmButton,\n    SelectArrayInput\n} from 'react-admin';\nimport {\n    Chip\n} from \"@material-ui/core\";\nimport constants from '../utilities/constants';\n\nconst TeamFilter = (props) => {\n    return ( \n        <Filter {...props}>\n\n            <SearchInput \n                fullWidth\n                source=\"q\" \n                alwaysOn \n                variant=\"outlined\"\n            />\n        </Filter>\n    );\n};\n\nexport const TeamList = props => {\n    return (\n        <List \n            {...props}\n            filters={<TeamFilter />} \n            perPage={25} \n            title=\"Teams List\"\n            bulkActionButtons={false}\n        >\n            <Datagrid>\n                <TextField \n                    source=\"id\" \n                />\n                <TextField \n                    fullWidth\n                    source=\"created\" \n                />\n                <TextField \n                    source=\"modified\" \n                />\n                <TextField \n                    source=\"name\" \n                />\n                <BooleanField \n                    label=\"Email Notification\" \n                    source=\"isNotifyEmail\" \n                    />\n                <BooleanField \n                    label=\"WA Notification\" \n                    source=\"isNotifyWa\" \n                />\n                <FunctionField \n                    label=\"Status\" \n                    render={record => record ? constants.statusList[record['status']] : 'N/A'} \n                />\n                <ShowButton />\n                <DeleteWithConfirmButton />\n            </Datagrid>\n        </List>\n    );\n}\n\nexport const TeamEdit = props => {\n\n    const transform = data => {\n        var newData = data;\n        \n        delete newData.created;\n        delete newData.modified;\n        delete newData.deleted;\n        newData.notify_email = newData.isNotifyEmail;\n        delete newData.isNotifyEmail;\n        newData.notify_wa = newData.isNotifyWa;\n        delete newData.isNotifyWa;\n\n        if (typeof(newData.status) === 'number') {\n            if (newData.status > -1 && constants.statusList.length > newData.status) {\n                newData.status = constants.statusList[newData.status];\n            }\n        }\n\n        return newData;\n    }\n    return (\n        <Edit submitOnEnter={false} transform={transform} {...props} redirect=\"list\">\n            <SimpleForm>\n                <TextInput \n                    fullWidth\n                    source=\"name\"\n                    validate={[required()]} \n                />\n                <SelectInput\n                    fullWidth\n                    source=\"status\"\n                    choices={[\n                        { id: 'inactive', name: 'Inactive' },\n                        { id: 'activated', name: 'Active' },\n                        { id: 'blocked', name: 'Blocked' },\n                        { id: 'deleted', name: 'Deleted' },\n                    ]}\n                    validate={[required()]}\n                    format={record => { return !constants.statusList[record] ?  record : constants.statusList[record]} }\n                />\n                <BooleanInput \n                    fullWidth\n                    label=\"Email Notification\" \n                    source=\"isNotifyEmail\" \n                />\n                <BooleanInput \n                    fullWidth\n                    label=\"WA Notification\" \n                    source=\"isNotifyWa\" \n                />\n            </SimpleForm>\n        </Edit>\n    );\n}\n\nexport const TeamPost = props => {\n\n    const notify = useNotify();\n    const redirect = useRedirect();\n    const refresh = useRefresh();\n\n    const onSuccess = ({ data }) => {\n        console.log(data);\n        notify(`Successfully created a new team`)\n        redirect('/teams');\n        refresh();\n    };\n\n    return (\n        <Create onSuccess={onSuccess} submitOnEnter={false} {...props}>\n            <SimpleForm>\n                <TextInput \n                    fullWidth\n                    source=\"name\"\n                    validate={[required()]} \n                />\n                <SelectInput\n                    fullWidth\n                    source=\"status\"\n                    choices={[\n                        { id: 'inactive', name: 'Inactive' },\n                        { id: 'activated', name: 'Active' },\n                        { id: 'blocked', name: 'Blocked' },\n                        { id: 'deleted', name: 'Deleted' },\n                    ]}\n                    initialValue=\"activated\"\n                    validate={[required()]}\n                    format={record => { return !constants.statusList[record] ?  record : constants.statusList[record]} }\n                />\n                <BooleanInput \n                    fullWidth\n                    label=\"Email Notification\" \n                    source=\"isNotifyEmail\" \n                />\n                <BooleanInput \n                    fullWidth\n                    label=\"WA Notification\" \n                    source=\"isNotifyWa\" \n                />\n            </SimpleForm>\n        </Create>\n    );\n}\n\nexport const TeamShow = props => {\n\n    const notify = useNotify();\n    const redirect = useRedirect();\n    const refresh = useRefresh();\n    const dataProvider = useDataProvider();\n    const [genericLoading, setGenericLoading] = useState(false);\n    const [token, setToken] = useState('N/A');\n    const [expiration, setExpiration] = useState('');\n\n    const [update, { loading }] = useUpdate('members');\n\n    const TeamMemberCreateToolbar = props => {\n        \n        return (\n            <Toolbar {...props} >\n                <SaveButton disabled={loading}/>\n            </Toolbar>\n        );\n    };\n\n    const handleSubmit = val => {\n        update(\n            {payload: {id: val.id, data: {team_id: val.id, user_id: val.user_id, access: val.access}, previousData: val}},\n            {\n                onSuccess: ({data}) => {\n                    notify(data.message);\n                    redirect(`/teams/${val.id}/show/1`)\n                    refresh();\n                },\n                onFailure: (error) => {\n                    notify(error.message);\n                }\n            }\n        )\n    }\n\n    const TokenCreateToolbar = props => {\n        \n        return (\n            <Toolbar {...props} >\n                <SaveButton disabled={genericLoading}/>\n            </Toolbar>\n        );\n    };\n\n    const createToken = () => {\n        setGenericLoading(true);\n        return dataProvider\n        .tokenGrant('oauth', {\n            grant_type: 'team_token',\n            team_id: props.id,\n            expiration: expiration,\n            refresh_token: localStorage.refreshToken\n        })\n        .then( response => {\n    \n            console.log(response);\n            setToken(response.data.accessToken);\n            notify('Successfully created a team token');\n            setGenericLoading(false);\n        })\n        .catch( error => {\n            notify(error.message);\n            setGenericLoading(false);\n        });\n    }\n\n    const [accesses, setAccesses] = useState(\n        constants.teamAccessList\n    )\n\n    return (\n        <Show {...props}>\n            <TabbedShowLayout>\n                <Tab label=\"Team Details\">\n                    <TextField source=\"id\" />\n                    <TextField source=\"created\" />\n                    <TextField source=\"modified\" />\n                    <TextField source=\"name\" />\n                    <BooleanField label=\"Enable email Notification\"  source=\"isNotifyEmail\" />\n                    <BooleanField label=\"WA Notification\"  source=\"isNotifyWa\" />\n                    <FunctionField \n                        label=\"Status\" \n                        render={record => record ? constants.statusList[record['status']] : 'N/A'} \n                    />\n                </Tab>\n                <Tab label=\"Team Members\">\n                    <ReferenceManyField reference=\"members\" target=\"id\" addLabel={false}>\n                        <Datagrid >\n\n                            <FunctionField \n                                source=\"uid\"\n                                label=\"ID\"\n                                render={record => record.user ? record.user.id : 'N/A'} \n                            />\n                            <TextField \n                                source=\"created\" \n                            />\n                            <TextField \n                                source=\"modified\" \n                            />\n                            <FunctionField \n                                source=\"username\"\n                                label=\"Username\"\n                                render={record => record.user ? record.user.username : 'N/A'}  \n                            />\n                            <FunctionField \n                                label=\"Status\" \n                                render={record => record.user ? constants.statusList[record.user.status] : 'N/A'} \n                            />\n\n                            <BooleanField label=\"Is Original\"  source=\"is_original\" />\n                            <FunctionField \n                                label=\"Access\" \n                                source=\"access\"\n                                render={record => {\n                                    return record?.access?.map(\n                                        item => {\n                                            return <Chip label={accesses[item]} key={item} />\n                                        }\n                                    )\n                                }} \n                            />\n                            <DeleteWithConfirmButton />\n                        </Datagrid>\n                    </ReferenceManyField>\n                </Tab>\n                <Tab label=\"Add/Update Member\">\n                    <SimpleForm \n                            resource='members'\n                            save={handleSubmit}\n                            toolbar={ <TeamMemberCreateToolbar /> }\n                            redirect='list'\n                        >\n                            <TextInput \n                                fullWidth\n                                source=\"user_id\" \n                                validate={[required()]}\n                            />\n                            <SelectArrayInput\n                                fullWidth\n                                source=\"access\"\n                                label=\"Access\"\n                                choices={constants.teamAccessListChoices}\n                                initialValue={constants.teamAccessDefault}\n                                validate={[required()]}\n                            />\n                        </SimpleForm>\n                </Tab>\n                <Tab label=\"Create Token\">\n                    <SimpleForm \n                        resource='oauth'\n                        save={createToken}\n                        toolbar={ <TokenCreateToolbar /> }\n                    >\n                        <NumberInput \n                            source=\"expiration\" \n                            onChange={ e => {setExpiration(e.target.value); return e.target.value;}}\n                            validate={[required()]}\n                        />\n\n                        <TextField\n                            fullWidth={false} \n                            label=\"Generated Token\"\n                            emptyText={token}\n                        />\n                    </SimpleForm>\n                </Tab>\n            </TabbedShowLayout>\n        </Show>\n    );\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { crudGetOne, UserMenu, MenuItemLink } from 'react-admin';\nimport PersonIcon from '@material-ui/icons/Person';\n\nclass AppMenu extends Component {\n    componentDidMount() {\n        if (localStorage.getItem('accessToken')) {\n            this.fetchProfile();\n        }\n    }\n\n    fetchProfile = () => {\n        this.props.crudGetOne(\n            // The resource\n            'profile',\n            // The id of the resource item to fetch\n            localStorage.getItem('id'),\n            // The base path. Mainly used on failure to fetch the data\n            '/profile',\n            // Wether to refresh the current view. I don't need it here\n            false\n        );\n    };\n\n    render() {\n        const { crudGetOne, profile, ...props } = this.props;\n        \n        return (\n            <UserMenu label={profile ? profile.username : ''} {...props}>\n                <MenuItemLink\n                    to=\"/profile\"\n                    primaryText=\"Profile\"\n                    leftIcon={<PersonIcon />}\n                />\n            </UserMenu>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const resource = 'profile';\n\n    const profileState = state.admin.resources[resource];\n\n    return {\n        profile: profileState\n            ? profileState.data[localStorage.getItem('id')]\n            : null\n    };\n};\n\nconst AppUserMenu = connect(\n    mapStateToProps,\n    { crudGetOne }\n)(AppMenu);\nexport default AppUserMenu;\n","import React from 'react';\nimport { AppBar } from 'react-admin';\nimport AppUserMenu from './Menu';\n\nconst LayoutAppBar = props => <AppBar {...props} userMenu={<AppUserMenu />} />;\nexport default LayoutAppBar;\n","import React from 'react';\nimport { Layout } from 'react-admin';\nimport AppBar from './AppBar';\n\nconst AppLayout = props => <Layout {...props} appBar={AppBar} />;\n\nexport default AppLayout;\n","import React from 'react';\nimport { Admin, Resource, ListGuesser, EditGuesser, ShowGuesser  } from 'react-admin';\nimport GroupIcon from '@material-ui/icons/Group';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport theme from './theme';\nimport routes from './utilities/routes';\nimport authProvider from './providers/authProvider';\nimport dataProvider from './providers/dataProviders';\n\nimport NotFound from './components/NotFound';\nimport Dashboard from './components/Dashboard';\nimport LoginLayout from './layouts/LoginLayout';\n\nimport { UserPost, UserList, UserEdit, UserShow } from './modules/User';\nimport { TeamList, TeamEdit, TeamPost, TeamShow } from './modules/Team';\n\nimport AppLayout from './layouts/MainLayout/Layout';\n\nconst App = () => {\n\n  return (\n    <Admin\n      title=\"xman Admin Portal\"\n      theme={theme}\n      loginPage={LoginLayout}\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n      customRoutes={routes}\n      catchAll={NotFound}\n      layout={AppLayout}\n      customRoutes={routes}\n    >\n      <Resource name=\"profile\" />\n      <Resource icon={PeopleAltIcon} name=\"users\" options={{ label: 'Users' }} list={UserList} edit={UserEdit} show={UserShow} create={UserPost} />\n      <Resource icon={GroupIcon} name=\"teams\" options={{ label: 'Teams' }} list={TeamList} edit={TeamEdit} create={TeamPost} show={TeamShow} />\n      <Resource name=\"members\" />\n      <Resource name=\"tokens\" />\n      <Resource name=\"memberships\" />\n    </Admin>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}